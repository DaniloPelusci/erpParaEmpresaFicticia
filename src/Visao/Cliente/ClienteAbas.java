/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.Cliente;

import Controle.ModeloTabela;
import DAO.BairroDAO;
import DAO.CidadeDAO;
import DAO.cliente.ClienteDAO;
import DAO.cliente.RamoAtividadeDAO;
import DAO.ConnectionFactory;
import DAO.EstadoDAO;
import DAO.TipoAcaoDAO;
import DAO.cliente.RotasDAO;
import DAO.haver.HaverDAO;
import DAO.pedido.PedidoDAO;
import DAO.venda.ParcelaDAO;
import DAO.venda.VendaDAO;
import Modelo.Cliente.ModeloCliente;
import Modelo.Cliente.ModeloRamoAtividade;
import Modelo.Cliente.ModeloRota;
import Modelo.ModeloBairro;
import Modelo.ModeloCidades;
import Modelo.ModeloEmpresa;
import Modelo.ModeloEstado;
import Modelo.Pedido.ModeloPedido;
import Modelo.venda.ModeloParcela;
import Modelo.venda.ModeloVenda;
import Visao.Endereco.FrmBairro;
import Visao.Endereco.FrmCidades;
import Visao.Endereco.FrmEstado;
import Visao.Fornecedor.Fornecedor;
import Visao.Pesquisa.PesquisaLastroNumeroGrafica;
import Visao.parcelas.Parcela;
import Visao.pedidoLocacao.Locacao;
import Visao.venda.Testes;
import Visao.venda.VendaView;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;

import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.TableRowSorter;
import javax.swing.text.DefaultStyledDocument;
import logica.ValidaCNPJ;
import logica.ValidaCPF;

/**
 *
 * @author SERVIDOR
 */
public class ClienteAbas extends javax.swing.JFrame {

    /**
     * Creates new form ClienteAbas
     */
    public ClienteAbas() throws SQLException {
        initComponents();

        tabelaClientes();

        jButton1.setVisible(false);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Calendar horaAtual = Calendar.getInstance();

        // Ou qualquer outra forma que tem
        String dataFormatada = sdf.format(horaAtual.getTime());
        jFormattedTextFieldDATA.setText(dataFormatada);

        desativaLableValidation();
        if (jComboBoxEstado.getItemCount() <= 0) {
            try {
                Connection connection = new ConnectionFactory().getConnection();
                EstadoDAO EstadoDao = new EstadoDAO(connection);
                ModeloEstado modeloEstado = new ModeloEstado();
                List<ModeloEstado> estado = EstadoDao.lista();

                for (ModeloEstado e : estado) {
                    jComboBoxEstado.addItem(e);
                }
                ModeloRamoAtividade modeloramoatividade = new ModeloRamoAtividade();
                RamoAtividadeDAO ramoatividadedao = new RamoAtividadeDAO(connection);
                List<ModeloRamoAtividade> atividades = ramoatividadedao.lista();

                for (ModeloRamoAtividade t : atividades) {
                    jComboramoATIVIDADES.addItem(t);
                }
                ModeloRota modeloRota = new ModeloRota();
                RotasDAO rotaDAO = new RotasDAO(connection);
                List<ModeloRota> rotas = rotaDAO.lista();

                for (ModeloRota t : rotas) {
                    jComboBoxRota.addItem(t);
                }
                connection.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);

                Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup11 = new javax.swing.ButtonGroup();
        buttonGroup12 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jFormattedTextFieldDATA = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldContato = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldFantasia = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldEndereco = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboramoATIVIDADES = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jFormattedTextCEP = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldRG = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOBSERVAÃ‡AO = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonPesquisar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jTextFieldCPF = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxEstado = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxCidade = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxBairro = new javax.swing.JComboBox<>();
        validacaoCPF = new javax.swing.JLabel();
        validacaoNome = new javax.swing.JLabel();
        validacaoContato = new javax.swing.JLabel();
        validacaoFantasia = new javax.swing.JLabel();
        validacaoEndereco = new javax.swing.JLabel();
        validacaoCep = new javax.swing.JLabel();
        validacaoCNPJ = new javax.swing.JLabel();
        validacaoTelefone = new javax.swing.JLabel();
        validacaoRG = new javax.swing.JLabel();
        validacaoInscricaoMunicipal = new javax.swing.JLabel();
        validacaoData = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldCNPJ = new javax.swing.JFormattedTextField();
        jTextFieldInscricaoMunicipal = new javax.swing.JFormattedTextField();
        jTextFieldTele1 = new javax.swing.JFormattedTextField();
        jTextFieldTelefone2 = new javax.swing.JFormattedTextField();
        jTextFieldCelular = new javax.swing.JFormattedTextField();
        jTextFieldFAX = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        jRadioButtonID = new javax.swing.JRadioButton();
        jRadioButtonNome = new javax.swing.JRadioButton();
        jRadioButtonCPF = new javax.swing.JRadioButton();
        jRadioButtonCNPJ = new javax.swing.JRadioButton();
        jRadioButtonEndereco = new javax.swing.JRadioButton();
        jButtonEstado = new javax.swing.JButton();
        jButtonCidade = new javax.swing.JButton();
        jButtonBairro = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldID = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldIDParaPesquisa = new javax.swing.JTextField();
        jComboBoxRota = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jTextFieldinscricaoEstadual = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableVendas = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableLastro = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jTextFieldVasilhames = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldPecas = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldConcentrador = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableLocacao = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTableHaver = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableParcelasVendaNPagas = new javax.swing.JTable();
        jTextFieldApagarVenda = new javax.swing.JTextField();
        jTextFieldaApagarLocacao = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableParcelasLocacaoNPagas = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jTextFieldTotalLocacaoVenda = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jTextFieldApagarVencidasVenda = new javax.swing.JTextField();
        jTextFieldaApagarLocacaoVencidas = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextFieldTotalLocacaoVendaVencidas = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableParcelaPagamentos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jTextFieldnVenda = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("E.B.O. Cadastro de Cliente");

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jLabel3.setText("Codigo");

        try {
            jFormattedTextFieldDATA.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel18.setText("Data Cadastro");

        jLabel5.setText("Nome");

        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyReleased(evt);
            }
        });

        jLabel20.setText("Contato");

        jLabel6.setText("Fantasia");

        jLabel7.setText("EndereÃ§o");

        jLabel13.setText("Telefone");

        jLabel14.setText("Celular");

        jLabel15.setText("Telefone Comercial");

        jLabel19.setText("Fax");

        jLabel9.setText("CPF");

        jLabel10.setText("CNPJ");

        jLabel4.setText("Ramo de Atividade");

        jLabel1.setText("CEP");

        try {
            jFormattedTextCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel2.setText("InscriÃ§Ã£o Municipal");

        jLabel8.setText("RG");

        jTextAreaOBSERVAÃ‡AO.setColumns(20);
        jTextAreaOBSERVAÃ‡AO.setRows(5);
        jScrollPane1.setViewportView(jTextAreaOBSERVAÃ‡AO);

        jLabel17.setText("ObservaÃ§Ã£o");

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonAlterar.setText("Alterar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableClientes.setFillsViewportHeight(true);
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTableClientesMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(jTableClientes);

        try {
            jTextFieldCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel16.setText("Estado");

        jComboBoxEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxEstadoItemStateChanged(evt);
            }
        });

        jLabel12.setText("Cidade");

        jComboBoxCidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxCidadeItemStateChanged(evt);
            }
        });

        jLabel11.setText("Bairro");

        validacaoCPF.setForeground(new java.awt.Color(255, 0, 0));
        validacaoCPF.setText("*");

        validacaoNome.setForeground(new java.awt.Color(255, 0, 0));
        validacaoNome.setText("*");

        validacaoContato.setForeground(new java.awt.Color(255, 0, 0));
        validacaoContato.setText("*");

        validacaoFantasia.setForeground(new java.awt.Color(255, 0, 0));
        validacaoFantasia.setText("*");

        validacaoEndereco.setForeground(new java.awt.Color(255, 0, 0));
        validacaoEndereco.setText("*");

        validacaoCep.setForeground(new java.awt.Color(255, 0, 0));
        validacaoCep.setText("*");

        validacaoCNPJ.setForeground(new java.awt.Color(255, 0, 0));
        validacaoCNPJ.setText("*");

        validacaoTelefone.setForeground(new java.awt.Color(255, 0, 0));
        validacaoTelefone.setText("*");

        validacaoRG.setForeground(new java.awt.Color(255, 0, 0));
        validacaoRG.setText("*");

        validacaoInscricaoMunicipal.setForeground(new java.awt.Color(255, 0, 0));
        validacaoInscricaoMunicipal.setText("*");

        validacaoData.setForeground(new java.awt.Color(255, 0, 0));
        validacaoData.setText("*");

        jButton1.setText("Gerar Contrato");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel29.setText("InscriÃ§Ã£o Estadual");

        try {
            jTextFieldCNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jTextFieldInscricaoMunicipal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jTextFieldTele1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextFieldTele1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTele1ActionPerformed(evt);
            }
        });

        try {
            jTextFieldTelefone2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jTextFieldCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jTextFieldFAX.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa"));

        buttonGroup1.add(jRadioButtonID);
        jRadioButtonID.setText("ID");

        buttonGroup1.add(jRadioButtonNome);
        jRadioButtonNome.setSelected(true);
        jRadioButtonNome.setText("Nome");
        jRadioButtonNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNomeActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonCPF);
        jRadioButtonCPF.setText("CPF");

        buttonGroup1.add(jRadioButtonCNPJ);
        jRadioButtonCNPJ.setText("CNPJ");

        buttonGroup1.add(jRadioButtonEndereco);
        jRadioButtonEndereco.setText("EndereÃ§o");
        jRadioButtonEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEnderecoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonID)
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonCPF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonCNPJ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonEndereco)
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonID)
                    .addComponent(jRadioButtonNome)
                    .addComponent(jRadioButtonCPF)
                    .addComponent(jRadioButtonCNPJ)
                    .addComponent(jRadioButtonEndereco)))
        );

        jButtonEstado.setText("+");
        jButtonEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEstadoActionPerformed(evt);
            }
        });

        jButtonCidade.setText("+");
        jButtonCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCidadeActionPerformed(evt);
            }
        });

        jButtonBairro.setText("+");
        jButtonBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBairroActionPerformed(evt);
            }
        });

        jLabel30.setText("e-mail");

        jTextFieldID.setEnabled(false);
        jTextFieldID.setFocusable(false);

        jLabel31.setText("ID para pesquisa");

        jTextFieldIDParaPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldIDParaPesquisaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldIDParaPesquisaKeyReleased(evt);
            }
        });

        jLabel32.setText("Rota");

        jTextFieldinscricaoEstadual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldinscricaoEstadualActionPerformed(evt);
            }
        });

        jButton3.setText("Apagar CNPJ e CPF");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Boleto");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel10))
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(validacaoCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(validacaoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldTele1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(32, 32, 32)
                                .addComponent(validacaoCep, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFormattedTextCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(validacaoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldTelefone2)
                                    .addComponent(jTextFieldCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(validacaoRG, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldRG, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(validacaoInscricaoMunicipal, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldInscricaoMunicipal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel29)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldinscricaoEstadual, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(116, 116, 116))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton3)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextFieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel19)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextFieldFAX, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel30)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboramoATIVIDADES, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonEstado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel16)
                                .addGap(10, 10, 10)
                                .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonCidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonBairro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxBairro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIDParaPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(validacaoData, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jFormattedTextFieldDATA, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1)
                        .addGap(138, 138, 138)
                        .addComponent(jLabel32)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxRota, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSair)
                        .addGap(179, 179, 179)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(20, 20, 20)
                                .addComponent(validacaoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(validacaoContato, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(validacaoFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel17)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(validacaoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldEndereco)
                            .addComponent(jTextFieldFantasia)
                            .addComponent(jTextFieldNome)
                            .addComponent(jTextFieldContato))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel18)
                            .addComponent(jFormattedTextFieldDATA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(validacaoData)
                            .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31)
                            .addComponent(jTextFieldIDParaPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel32)
                            .addComponent(jCheckBox1))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validacaoNome))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validacaoFantasia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(validacaoContato)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validacaoEndereco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(validacaoCep)
                            .addComponent(jFormattedTextCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(jComboramoATIVIDADES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)
                                .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonEstado)
                                .addComponent(jLabel12)
                                .addComponent(jComboBoxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonCidade))))
                    .addComponent(jComboBoxBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(validacaoCPF)
                    .addComponent(validacaoCNPJ)
                    .addComponent(jTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCNPJ)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validacaoRG)
                    .addComponent(jLabel2)
                    .addComponent(validacaoInscricaoMunicipal)
                    .addComponent(jTextFieldInscricaoMunicipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jTextFieldinscricaoEstadual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14)
                    .addComponent(jTextFieldTele1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTelefone2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel19)
                    .addComponent(jTextFieldFAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validacaoTelefone))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonNovo)
                        .addComponent(jButtonSalvar)
                        .addComponent(jButtonAlterar)
                        .addComponent(jButtonPesquisar)
                        .addComponent(jButtonExcluir)
                        .addComponent(jButtonSair)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jTabbedPane1.addTab("Cliente", jPanel1);

        jTableVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableVendas.setAutoscrolls(false);
        jTableVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableVendas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1270, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(203, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Vendas", jPanel2);

        jTableLastro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableLastro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLastroMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTableLastro);

        jLabel21.setText("Lastro de Vasilhames");

        jLabel22.setText("Lastro de Pecas");

        jLabel23.setText("Lastro de Concentrador");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldVasilhames)
                            .addComponent(jTextFieldPecas)
                            .addComponent(jTextFieldConcentrador, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 1043, Short.MAX_VALUE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jTextFieldVasilhames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextFieldPecas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jTextFieldConcentrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(108, 108, 108))
        );

        jTabbedPane1.addTab("Lastro", jPanel3);

        jTableLocacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableLocacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLocacaoMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTableLocacao);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1270, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("LocaÃ§Ã£o", jPanel4);

        jTableHaver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane9.setViewportView(jTableHaver);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1290, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 1270, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jTabbedPane1.addTab("Haver", jPanel7);

        jTableParcelasVendaNPagas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableParcelasVendaNPagas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableParcelasVendaNPagasMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTableParcelasVendaNPagas);

        jTableParcelasLocacaoNPagas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableParcelasLocacaoNPagas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableParcelasLocacaoNPagasMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTableParcelasLocacaoNPagas);

        jLabel24.setText("Total a pagar Venda");

        jLabel25.setText("Total a pagar LocaÃ§Ã£o");

        jLabel26.setText("Total LocaÃ§Ã£o e Venda");

        jLabel27.setText("Venda");

        jLabel28.setText("LocaÃ§Ã£o");

        jLabel34.setForeground(new java.awt.Color(204, 0, 0));
        jLabel34.setText("Total Vencidas Venda");

        jLabel35.setForeground(new java.awt.Color(204, 0, 0));
        jLabel35.setText("Total vencidas a pagar LocacÃ£o");

        jLabel36.setForeground(new java.awt.Color(204, 0, 0));
        jLabel36.setText("Total Locacao e Venda Vencidas");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1010, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8))
                        .addGap(0, 270, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(jTextFieldTotalLocacaoVendaVencidas, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldTotalLocacaoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(399, 399, 399))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel34)
                    .addComponent(jTextFieldApagarVencidasVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(99, 99, 99)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jTextFieldaApagarLocacaoVencidas, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldApagarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(102, 102, 102)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jTextFieldaApagarLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(296, 296, 296))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(jLabel34)
                            .addComponent(jLabel35))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldApagarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldaApagarLocacaoVencidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldaApagarLocacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextFieldApagarVencidasVenda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTotalLocacaoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTotalLocacaoVendaVencidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Divida", jPanel5);

        jTableParcelaPagamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableParcelaPagamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableParcelaPagamentosMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(jTableParcelaPagamentos);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(210, 210, 210))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1021, Short.MAX_VALUE)
                        .addGap(259, 259, 259))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        jTabbedPane1.addTab("pagamentos", jPanel8);

        jButton2.setText("Atualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("buscar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel33.setText("NÂ° Venda");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(304, 304, 304)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldnVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextFieldnVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jLabel33))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked

    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jTableVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendasMouseClicked
        try {
            new VendaView(Integer.parseInt("" + jTableVendas.getValueAt(jTableVendas.getSelectedRow(), 0))
            ).setVisible(true);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(Testes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableVendasMouseClicked

    private void jComboBoxCidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCidadeItemStateChanged
        Connection connection = null;
        List<ModeloBairro> bairroCombo = null;

        try {
            connection = new ConnectionFactory().getConnection();

            BairroDAO bairroDAO = new BairroDAO(connection);
            ModeloCidades cidadeCombo2 = (ModeloCidades) jComboBoxCidade.getSelectedItem();
            if (cidadeCombo2 != null) {
                bairroCombo = bairroDAO.buscaIdPorCidade(cidadeCombo2.getCodig());
            }

            jComboBoxBairro.removeAllItems();
            if (bairroCombo != null) {
                for (ModeloBairro b : bairroCombo) {
                    jComboBoxBairro.addItem(b);
                }
            }
            connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(Fornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBoxCidadeItemStateChanged

    private void jComboBoxEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxEstadoItemStateChanged
        Connection connection = null;
        try {
            connection = new ConnectionFactory().getConnection();

            CidadeDAO cidadeDAO = new CidadeDAO(connection);
            ModeloEstado estadoCombo = (ModeloEstado) jComboBoxEstado.getSelectedItem();
            List<ModeloCidades> cidadeCombo = cidadeDAO.buscaIdPorEstado(estadoCombo.getId());
            jComboBoxCidade.removeAllItems();

            for (ModeloCidades c : cidadeCombo) {
                jComboBoxCidade.addItem(c);
            }
            connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(Fornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jComboBoxEstadoItemStateChanged

    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        atualizar();
    }//GEN-LAST:event_jTableClientesMouseClicked

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed

        try {
            if (logica.LogicasPedido.joptionSenha()) {

                try {
                    Connection connection = ConnectionFactory.getConnection();
                    ClienteDAO clientedao = new ClienteDAO(connection);
                    ModeloCliente modelocliente = new ModeloCliente();
                    modelocliente.setId(Long.parseLong(jTextFieldID.getText()));

                    clientedao.remove(modelocliente);

                    JOptionPane.showMessageDialog(rootPane, "Cliente excluido com Sucesso");

                    preencherTabela();//TODO add your handling code here:
                    connection.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);

                    JOptionPane.showConfirmDialog(rootPane, "Erro ao excluir os  Registro!!\n erro:" + ex);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Senha Invalida");

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed

        try {

            ClienteDAO clientedao = new ClienteDAO(ConnectionFactory.getConnection());
            if (jRadioButtonID.isSelected()) {
                if (!(jTextFieldIDParaPesquisa.getText().isEmpty())) {
                    jTableClientes.setModel(clientedao.buscaIDTabela(Long.parseLong(jTextFieldIDParaPesquisa.getText().toUpperCase())));
                    jTableClientes.setRowSorter(new TableRowSorter(clientedao.buscaIDTabela(Long.parseLong(jTextFieldIDParaPesquisa.getText().toUpperCase()))));
                } else {
                    JOptionPane.showConfirmDialog(rootPane, "Id invalido");
                }
            }
            if (jRadioButtonNome.isSelected()) {
                if (!(jTextFieldNome.getText().isEmpty())) {
                    jTableClientes.setModel(clientedao.buscaLike(jTextFieldNome.getText().toUpperCase()));
                    jTableClientes.setRowSorter(new TableRowSorter(clientedao.buscaLike(jTextFieldNome.getText().toUpperCase())));
                } else {
                    JOptionPane.showConfirmDialog(rootPane, "Escreva o nome para ser pesquisado.");
                }
            }
            if (jRadioButtonCPF.isSelected()) {
                if (!(jTextFieldCPF.getText().isEmpty())) {
                    jTableClientes.setModel(clientedao.buscaCPF(jTextFieldCPF.getText().toUpperCase()));
                    jTableClientes.setRowSorter(new TableRowSorter(clientedao.buscaCPF(jTextFieldCPF.getText().toUpperCase())));
                } else {
                    JOptionPane.showConfirmDialog(rootPane, "Escreva o CPF para ser pesquisado.");
                }
            }
            if (jRadioButtonCNPJ.isSelected()) {
                if (!(jTextFieldCNPJ.getText().isEmpty())) {
                    jTableClientes.setModel(clientedao.buscaCNPJ(jTextFieldCNPJ.getText().toUpperCase()));
                    jTableClientes.setRowSorter(new TableRowSorter(clientedao.buscaCNPJ(jTextFieldCNPJ.getText().toUpperCase())));
                } else {
                    JOptionPane.showConfirmDialog(rootPane, "Escreva o CPF para ser pesquisado.");
                }
            }
            if (jRadioButtonEndereco.isSelected()) {
                if (!(jRadioButtonEndereco.getText().isEmpty())) {
                    jTableClientes.setModel(clientedao.buscaEndereco(jTextFieldEndereco.getText().toUpperCase()));
                    jTableClientes.setRowSorter(new TableRowSorter(clientedao.buscaEndereco(jTextFieldEndereco.getText().toUpperCase())));
                } else {
                    JOptionPane.showConfirmDialog(rootPane, "Escreva o endereco para ser pesquisado.");
                }
            }

            jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTableClientes.getColumnModel().getColumn(0).setResizable(false);
            jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTableClientes.getColumnModel().getColumn(1).setResizable(false);
            jTableClientes.getColumnModel().getColumn(2).setPreferredWidth(300);
            jTableClientes.getColumnModel().getColumn(2).setResizable(false);
            jTableClientes.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(3).setResizable(false);
            jTableClientes.getColumnModel().getColumn(4).setPreferredWidth(10);

            jTableClientes.getColumnModel().getColumn(5).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(5).setResizable(false);
            jTableClientes.getColumnModel().getColumn(6).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(6).setResizable(false);
            jTableClientes.getColumnModel().getColumn(7).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(7).setResizable(false);
            jTableClientes.getColumnModel().getColumn(8).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(8).setResizable(false);
            jTableClientes.getTableHeader().setReorderingAllowed(false);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPesquisarActionPerformed
    public void tabelaClientes() throws SQLException {

        ClienteDAO clientedao = new ClienteDAO(ConnectionFactory.getConnection());

        jTableClientes.setModel(clientedao.buscaLike(jTextFieldNome.getText()));
        jTableClientes.setRowSorter(new TableRowSorter(clientedao.buscaLike(jTextFieldNome.getText().toUpperCase())));
        jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(5);
        jTableClientes.getColumnModel().getColumn(0).setResizable(false);
        jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTableClientes.getColumnModel().getColumn(1).setResizable(false);
        jTableClientes.getColumnModel().getColumn(2).setPreferredWidth(300);
        jTableClientes.getColumnModel().getColumn(2).setResizable(false);
        jTableClientes.getColumnModel().getColumn(3).setPreferredWidth(20);
        jTableClientes.getColumnModel().getColumn(3).setResizable(false);
        jTableClientes.getColumnModel().getColumn(4).setPreferredWidth(20);
        jTableClientes.getColumnModel().getColumn(4).setResizable(false);
        jTableClientes.getColumnModel().getColumn(5).setPreferredWidth(20);
        jTableClientes.getColumnModel().getColumn(5).setResizable(false);
        jTableClientes.getColumnModel().getColumn(6).setPreferredWidth(20);
        jTableClientes.getColumnModel().getColumn(6).setResizable(false);
        jTableClientes.getColumnModel().getColumn(7).setPreferredWidth(20);
        jTableClientes.getColumnModel().getColumn(7).setResizable(false);
        jTableClientes.getColumnModel().getColumn(8).setPreferredWidth(20);
        jTableClientes.getColumnModel().getColumn(8).setResizable(false);
        jTableClientes.getTableHeader().setReorderingAllowed(false);
    }
    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        ativaDesativaCampos(true);
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed

        try (Connection connection = ConnectionFactory.getConnection()) {
            ClienteDAO clienteDAO = new ClienteDAO(connection);// TODO add your handling code here  :
            CidadeDAO CidadeDao = new CidadeDAO(connection);

            ModeloCliente modelocliente = new ModeloCliente();
            ModeloRamoAtividade modeloramoatividade = new ModeloRamoAtividade();
            ModeloEmpresa ModeloEmpresa = new ModeloEmpresa();
            //ramoatividade

            if (validacao().isEmpty()) {

//               if(){
                String cpf = jTextFieldCPF.getText();
                cpf = cpf.replace(".", "");
                cpf = cpf.replace("-", "");

                String cnpj = jTextFieldCNPJ.getText();
                cnpj = cnpj.replace(".", "");
                cnpj = cnpj.replace("-", "");
                cnpj = cnpj.replace("/", "");

                String inscMuni = jTextFieldInscricaoMunicipal.getText();
                inscMuni = inscMuni.replace(".", "");
                inscMuni = inscMuni.replace("-", "");

                String inscEstadual = jTextFieldinscricaoEstadual.getText();
                inscEstadual = inscEstadual.replace(".", "");
                inscEstadual = inscEstadual.replace("-", "");

                ModeloRamoAtividade ramoatividadeCombo = (ModeloRamoAtividade) jComboramoATIVIDADES.getSelectedItem();
                modelocliente.setRamoAtividade(ramoatividadeCombo.getId());
                //bairro
                ModeloBairro bairroCombo = (ModeloBairro) jComboBoxBairro.getSelectedItem();
                modelocliente.setBairro(bairroCombo.getCodBairro());
                //cidade
                ModeloCidades cidadeCombo = (ModeloCidades) jComboBoxCidade.getSelectedItem();
                modelocliente.setCidade(cidadeCombo.getCodig());
                //estado
                ModeloEstado estadoCombo = (ModeloEstado) jComboBoxEstado.getSelectedItem();
                modelocliente.setEstado(estadoCombo.getId());

                ModeloRota modeloRota = (ModeloRota) jComboBoxRota.getSelectedItem();
                modelocliente.setRota(modeloRota.getId());

                modelocliente.setNome(jTextFieldNome.getText().toUpperCase());
                modelocliente.setContato(jTextFieldContato.getText().toUpperCase());
                modelocliente.setEndereco(jTextFieldEndereco.getText().toUpperCase());
                modelocliente.setCep(jFormattedTextCEP.getText().toUpperCase());
                modelocliente.setTelefone1(jTextFieldTelefone2.getText().toUpperCase());
                modelocliente.setTelefone(jTextFieldTele1.getText().toUpperCase());
                modelocliente.setFax(jTextFieldFAX.getText().toUpperCase());
                modelocliente.setCelular(jTextFieldCelular.getText().toUpperCase());
                modelocliente.setObservacao(jTextAreaOBSERVAÃ‡AO.getText().toUpperCase());
                modelocliente.setCpf(jTextFieldCPF.getText().toUpperCase());
                modelocliente.setNomeFantasia(jTextFieldFantasia.getText().toUpperCase());
                modelocliente.setBoleto(jCheckBox1.isSelected());
                modelocliente.seteMail(jTextFieldEmail.getText());
                if (jTextFieldEmail.getText().trim() == "") {
                    modelocliente.seteMail(null);
                }
                if (jTextFieldCNPJ.getText().equals("  .   .   /    -  ")) {
                    modelocliente.setCnpj(null);
                } else {
                    modelocliente.setCnpj(jTextFieldCNPJ.getText());
                }
                if (jTextFieldCPF.getText().equals("   .   .   -  ")) {
                    modelocliente.setCpf(null);
                } else {
                    modelocliente.setCpf(jTextFieldCPF.getText());
                }
                if (jTextFieldRG.getText().isEmpty()) {
                    modelocliente.setRg(null);

                } else {
                    modelocliente.setRg(jTextFieldRG.getText());
                }
                if (jTextFieldInscricaoMunicipal.getText().equals("   .   - ")) {
                    modelocliente.setInscricaoMunicipal(null);
                } else {
                    modelocliente.setInscricaoMunicipal(jTextFieldInscricaoMunicipal.getText());
                }
                if (jTextFieldinscricaoEstadual.getText().equals("  .   .   - ")) {
                    modelocliente.setInscricaoEstadual(null);
                } else {
                    modelocliente.setInscricaoEstadual(jTextFieldinscricaoEstadual.getText());
                }

                String stringDataSalvar = jFormattedTextFieldDATA.getText();
                SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

                Date dataSalvar = new Date(format.parse(stringDataSalvar).getTime());
                modelocliente.setDataCadastro(dataSalvar);

                String idSalvar = jTextFieldID.getText();

                if (idSalvar.equals("")) {

                    if (ValidaCPF.isCPF(cpf)) {
                        if (clienteDAO.verificaCPFAdiciona(jTextFieldCPF.getText())) {
                            JOptionPane.showMessageDialog(null, " CPF jÃ¡ existente ");

                            validacaoCPF.setVisible(true);

                        } else if (clienteDAO.verificaNomeFantasiaadiciona(jTextFieldFantasia.getText())) {
                            JOptionPane.showMessageDialog(null, " Nome fantasia jÃ¡ existente ");
                        } else {

                            clienteDAO.adiciona(modelocliente);
                            JOptionPane.showMessageDialog(null, " Cliente cadastrado com sucesso ");
                            new ClienteAbas().setVisible(true);
                            dispose();
                        }
                    } else if (ValidaCNPJ.isCNPJ(cnpj)) {
                        if (clienteDAO.verificaCNPJAdiciona(jTextFieldCNPJ.getText())) {
                            JOptionPane.showMessageDialog(null, " CNPJ jÃ¡ existente ");

                            validacaoCNPJ.setVisible(true);

                        } else if (clienteDAO.verificaNomeFantasiaadiciona(jTextFieldFantasia.getText())) {
                            JOptionPane.showMessageDialog(null, " Nome fantasia jÃ¡ existente ");
                        } else {

                            clienteDAO.adiciona(modelocliente);
                            JOptionPane.showMessageDialog(null, " Cliente cadastrado com sucesso ");
                            new ClienteAbas().setVisible(true);
                            dispose();
                        }
                    }

                    //altera 
                } else if (ValidaCPF.isCPF(cpf)) {
                    if (clienteDAO.verificaCPFAltera(jTextFieldCPF.getText(), Long.parseLong(jTextFieldID.getText()))) {
                        JOptionPane.showMessageDialog(null, " CPF jÃ¡ existente ");
                        validacaoCPF.setVisible(true);
                    } else if (clienteDAO.verificaNomeFantasiaAltera(jTextFieldFantasia.getText(), Long.parseLong(jTextFieldID.getText()))) {
                        JOptionPane.showMessageDialog(null, " Nome fantasia jÃ¡ existente ");
                    } else {
                        modelocliente.setId(Long.parseLong(idSalvar));

                        clienteDAO.altera(modelocliente);

                        JOptionPane.showMessageDialog(null, " Cliente cadastrado com sucesso");
                        new ClienteAbas().setVisible(true);
                        dispose();
                    }

                } else if (ValidaCNPJ.isCNPJ(cnpj)) {
                    if (clienteDAO.verificaCNPJAltera(jTextFieldCNPJ.getText(), Long.parseLong(jTextFieldID.getText()))) {
                        JOptionPane.showMessageDialog(null, " CNPJ jÃ¡ existente ");

                        validacaoCNPJ.setVisible(true);

                    } else if (clienteDAO.verificaNomeFantasiaAltera(jTextFieldFantasia.getText(), Long.parseLong(jTextFieldID.getText()))) {
                        JOptionPane.showMessageDialog(null, " Nome fantasia jÃ¡ existente ");
                    } else {
                        modelocliente.setId(Long.parseLong(idSalvar));

                        clienteDAO.altera(modelocliente);

                        JOptionPane.showMessageDialog(null, " Cliente cadastrado com sucesso");
                        new ClienteAbas().setVisible(true);
                        dispose();
                    }
                }

//                }else{
//                    JOptionPane.showMessageDialog(null, " CPF ja existente :");
//                }
            } else {
                String message = validacao();
                JOptionPane.showMessageDialog(null, message, "Aviso", JOptionPane.INFORMATION_MESSAGE);

            }

            preencherTabela();
            //JOptionPane.showMessageDialog(rootPane, "Dados Inseridos Com Sucesso");

            connection.close();

        } catch (SQLException ex) {

            JOptionPane.showMessageDialog(null, " Falha no Armazenamento de dados \n ERRO :" + ex);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, " Falha no Armazenamento de dados \n ERRO :" + ex);
            Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        ativaDesativaCampos(true);
        limparCampos();


    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jTableLocacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLocacaoMouseClicked
        try {
            new Parcela(Long.parseLong("" + jTableLocacao.getValueAt(jTableLocacao.getSelectedRow(), 0))).setVisible(true);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableLocacaoMouseClicked

    private void jTableParcelasVendaNPagasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableParcelasVendaNPagasMouseClicked

        try {
            new Parcela(Long.parseLong("" + jTableParcelasVendaNPagas.getValueAt(jTableParcelasVendaNPagas.getSelectedRow(), 0))).setVisible(true);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(VendaView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableParcelasVendaNPagasMouseClicked

    private void jTableParcelasLocacaoNPagasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableParcelasLocacaoNPagasMouseClicked
        try {
            new Parcela(Long.parseLong("" + jTableParcelasLocacaoNPagas.getValueAt(jTableParcelasLocacaoNPagas.getSelectedRow(), 0))).setVisible(true);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(VendaView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableParcelasLocacaoNPagasMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        String nomeArquivo = jTextFieldID.getText() + ".pdf";
        String endereco = "H:\\";
        if (JOptionPane.showConfirmDialog(rootPane, "JÃ¡ tem contrato gerado para esse cliente deseja altera-lo?") == 0) {
            if (!validarArquivoPorNome(nomeArquivo, endereco)) {
                try {
                    Connection connection = ConnectionFactory.getConnection();
                    ClienteDAO clienteDAO = new ClienteDAO(connection);

                    if (clienteDAO.verificacao(Long.parseLong(jTextFieldID.getText()))) {
                        new Contrato(Integer.parseInt(jTextFieldID.getText())).setVisible(true);

                    }
                    connection.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);

                    Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (JOptionPane.showConfirmDialog(rootPane, "JÃ¡ tem contrato gerado para esse cliente deseja altera-lo?") == 0) {
                try {
                    Connection connection = ConnectionFactory.getConnection();
                    ClienteDAO clienteDAO = new ClienteDAO(connection);

                    if (clienteDAO.verificacao(Long.parseLong(jTextFieldID.getText()))) {
                        new Contrato(Integer.parseInt(jTextFieldID.getText())).setVisible(true);
                    }
                    connection.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);

                    Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        atualizar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldTele1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTele1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTele1ActionPerformed

    private void jButtonEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEstadoActionPerformed
        try {
            new FrmEstado().setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
        }    // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEstadoActionPerformed

    private void jButtonCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCidadeActionPerformed
        try {
            new FrmCidades().setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCidadeActionPerformed

    private void jButtonBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBairroActionPerformed
        try {
            new FrmBairro().setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
        }    // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBairroActionPerformed

    private void jTableLastroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLastroMouseClicked
        String Id = "" + jTableLastro.getValueAt(jTableLastro.getSelectedRow(), 0);        // TODO add your handling code here:
        try {
            new Visao.vasilhame.Vasilhame(Integer.parseInt(Id), 2).setVisible(true);
            // TODO add your handling code here:
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(PesquisaLastroNumeroGrafica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableLastroMouseClicked

    private void jRadioButtonEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonEnderecoActionPerformed

    private void jTextFieldinscricaoEstadualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldinscricaoEstadualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldinscricaoEstadualActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextFieldCPF.setText("");
        jTextFieldCNPJ.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyPressed

    }//GEN-LAST:event_jTextFieldNomeKeyPressed

    private void jRadioButtonNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonNomeActionPerformed

    private void jTextFieldIDParaPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDParaPesquisaKeyPressed

    }//GEN-LAST:event_jTextFieldIDParaPesquisaKeyPressed

    private void jTextFieldIDParaPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIDParaPesquisaKeyReleased
        try {

            ClienteDAO clientedao = new ClienteDAO(ConnectionFactory.getConnection());

            if (!(jTextFieldIDParaPesquisa.getText().isEmpty())) {
                jTableClientes.setModel(clientedao.buscaIDTabela(Long.parseLong(jTextFieldIDParaPesquisa.getText().toUpperCase())));
                jTableClientes.setRowSorter(new TableRowSorter(clientedao.buscaIDTabela(Long.parseLong(jTextFieldIDParaPesquisa.getText().toUpperCase()))));
            }

            jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTableClientes.getColumnModel().getColumn(0).setResizable(false);
            jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTableClientes.getColumnModel().getColumn(1).setResizable(false);
            jTableClientes.getColumnModel().getColumn(2).setPreferredWidth(300);
            jTableClientes.getColumnModel().getColumn(2).setResizable(false);
            jTableClientes.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(3).setResizable(false);
            jTableClientes.getColumnModel().getColumn(4).setPreferredWidth(10);

            jTableClientes.getColumnModel().getColumn(5).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(5).setResizable(false);
            jTableClientes.getColumnModel().getColumn(6).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(6).setResizable(false);
            jTableClientes.getColumnModel().getColumn(7).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(7).setResizable(false);
            jTableClientes.getColumnModel().getColumn(8).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(8).setResizable(false);
            jTableClientes.getTableHeader().setReorderingAllowed(false);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextFieldIDParaPesquisaKeyReleased

    private void jTextFieldNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyReleased
        try {
            Connection connection = ConnectionFactory.getConnection();
            ClienteDAO clientedao = new ClienteDAO(connection);
            if (jRadioButtonNome.isSelected()) {
                if (!(jTextFieldNome.getText().isEmpty())) {
                    jTableClientes.setModel(clientedao.buscaLike(jTextFieldNome.getText().toUpperCase()));
                    jTableClientes.setRowSorter(new TableRowSorter(clientedao.buscaLike(jTextFieldNome.getText().toUpperCase())));
                }
            }

            jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTableClientes.getColumnModel().getColumn(0).setResizable(false);
            jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTableClientes.getColumnModel().getColumn(1).setResizable(false);
            jTableClientes.getColumnModel().getColumn(2).setPreferredWidth(300);
            jTableClientes.getColumnModel().getColumn(2).setResizable(false);
            jTableClientes.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(3).setResizable(false);
            jTableClientes.getColumnModel().getColumn(4).setPreferredWidth(10);

            jTableClientes.getColumnModel().getColumn(5).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(5).setResizable(false);
            jTableClientes.getColumnModel().getColumn(6).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(6).setResizable(false);
            jTableClientes.getColumnModel().getColumn(7).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(7).setResizable(false);
            jTableClientes.getColumnModel().getColumn(8).setPreferredWidth(10);
            jTableClientes.getColumnModel().getColumn(8).setResizable(false);
            jTableClientes.getTableHeader().setReorderingAllowed(false);
            connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextFieldNomeKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {

            Connection Connection;
            Connection = new ConnectionFactory().getConnection();

            jCheckBox1.setSelected(false);
            jButton1.setVisible(true);
            ativaDesativaCampos(false);

            ModeloVenda modeloVenda = new ModeloVenda();
            VendaDAO vendaDAO = new VendaDAO(Connection);
            modeloVenda = vendaDAO.buscaPorId(Long.parseLong(jTextFieldnVenda.getText()));

            String Id = "" + modeloVenda.getIdcliente();        // TODO add your handling code here:
            limparCampos();
            ModeloRamoAtividade modeloRamoTabela = new ModeloRamoAtividade();
            ModeloRota modeloRotatabela = new ModeloRota();
            ModeloEstado modeloEstadoTabela = new ModeloEstado();
            ModeloBairro modelobairroTabela = new ModeloBairro();
            ModeloCidades modelocidadeTabela = new ModeloCidades();
            ModeloCliente modeloclienteTabela = new ModeloCliente();

            CidadeDAO cidadeDAO = new CidadeDAO(Connection);
            EstadoDAO estadoDAO = new EstadoDAO(Connection);
            BairroDAO bairroDAO = new BairroDAO(Connection);
            ClienteDAO clienteDAO = new ClienteDAO(Connection);
            RotasDAO rotasDAO = new RotasDAO(Connection);
            RamoAtividadeDAO ramoatividadeDAO = new RamoAtividadeDAO(Connection);
            modeloclienteTabela = clienteDAO.buscaPorId(Long.parseLong(Id));
            modeloEstadoTabela = estadoDAO.buscaPorId(modeloclienteTabela.getEstado());
            modelocidadeTabela = cidadeDAO.buscaPorId(modeloclienteTabela.getCidade());
            modelobairroTabela = bairroDAO.buscaPorId(modeloclienteTabela.getBairro());
            modeloRamoTabela = ramoatividadeDAO.buscaPorId(modeloclienteTabela.getRamoAtividade());
            modeloRotatabela = rotasDAO.buscaPorId(modeloclienteTabela.getRota());

            for (int i = 0; i < jComboBoxEstado.getItemCount(); ++i) {

                ModeloEstado modeloEstadoTabela2 = (ModeloEstado) jComboBoxEstado.getItemAt(i);
                if (modeloEstadoTabela.getId().equals(modeloEstadoTabela2.getId())) {
                    jComboBoxEstado.setSelectedIndex(i);
                    break;

                }
            }

            for (int i = 0; i < jComboBoxCidade.getItemCount(); ++i) {
                ModeloCidades modeloCidades2 = (ModeloCidades) jComboBoxCidade.getItemAt(i);

                if (modelocidadeTabela.getCodig().equals(modeloCidades2.getCodig())) {

                    jComboBoxCidade.setSelectedIndex(i);
                    break;

                }
            }

            for (int i = 0; i < jComboBoxBairro.getItemCount(); ++i) {
                ModeloBairro modeloBairro2 = (ModeloBairro) jComboBoxBairro.getItemAt(i);

                if (modelobairroTabela.getCodBairro().equals(modeloBairro2.getCodBairro())) {

                    jComboBoxBairro.setSelectedIndex(i);
                    break;

                }
            }
            for (int i = 0; i < jComboramoATIVIDADES.getItemCount(); ++i) {
                ModeloRamoAtividade modeloRamoAtividade2 = (ModeloRamoAtividade) jComboramoATIVIDADES.getItemAt(i);

                if (modeloRamoTabela.getId().equals(modeloRamoAtividade2.getId())) {

                    jComboramoATIVIDADES.setSelectedIndex(i);
                    break;

                }
            }

            for (int i = 0; i < jComboBoxRota.getItemCount(); ++i) {
                ModeloRota modeloRota2 = (ModeloRota) jComboBoxRota.getItemAt(i);

                if (modeloRotatabela.getId().equals(modeloRota2.getId())) {

                    jComboBoxRota.setSelectedIndex(i);
                    break;

                }
            }

            jTextFieldID.setText(Id);

            jTextFieldRG.setText(modeloclienteTabela.getRg());
            jTextFieldCPF.setText(modeloclienteTabela.getCpf());
            jTextFieldCNPJ.setText(modeloclienteTabela.getCnpj());
            jFormattedTextCEP.setText(modeloclienteTabela.getCep());
            jTextFieldInscricaoMunicipal.setText(modeloclienteTabela.getInscricaoMunicipal());

            jTextFieldNome.setText(modeloclienteTabela.getNome());
            jTextFieldFantasia.setText(modeloclienteTabela.getNomeFantasia());
            jTextFieldEndereco.setText(modeloclienteTabela.getEndereco());

            jTextFieldTele1.setText(modeloclienteTabela.getTelefone());
            jTextFieldTelefone2.setText(modeloclienteTabela.getTelefone1());
            jTextFieldCelular.setText(modeloclienteTabela.getCelular());

            jTextFieldFAX.setText(modeloclienteTabela.getFax());
            jTextFieldContato.setText(modeloclienteTabela.getContato());
            jTextAreaOBSERVAÃ‡AO.setText(modeloclienteTabela.getObservacao());
            jTextFieldinscricaoEstadual.setText(modeloclienteTabela.getInscricaoEstadual());
            jTextFieldEmail.setText(modeloclienteTabela.geteMail());

            String data1 = String.valueOf(modeloclienteTabela.getDataCadastro());
            String data3[] = data1.split(Pattern.quote("-"));

            String ano = data3[0];
            String mes = data3[1];
            String dia = data3[2];
            String dataSalvar = dia + mes + ano;

            jFormattedTextFieldDATA.setText(dataSalvar);

            if (!jTextFieldID.getText().isEmpty()) {
                try {
                    Connection connection = new ConnectionFactory().getConnection();
                    ParcelaDAO parcelasDAO = new ParcelaDAO(connection);
                    List<ModeloParcela> modeloParcelas = parcelasDAO.listaPoridClienteVenda(Long.parseLong(jTextFieldID.getText()));
                    List<ModeloParcela> modeloParcelasNpagas = parcelasDAO.listaPorNPagoIdCliente(Long.parseLong(jTextFieldID.getText()));
                    float valorAPagarVenda = parcelasDAO.SomaTotalValorPagarVenda(Long.parseLong(jTextFieldID.getText()));

                    float valorPagoVenda = parcelasDAO.SomaTotalValorPagoVenda(Long.parseLong(jTextFieldID.getText()));

                    float valorTotalDevidoVenda = valorAPagarVenda - valorPagoVenda;

                    float valotTotalDevidoLocacao = parcelasDAO.SomaTotalValorASerpagoLocaÃ§Ã£o(Long.parseLong(jTextFieldID.getText()));
                    float valorPagoLocacao = parcelasDAO.SomaTotalValorPagoLocaÃ§Ã£o(Long.parseLong(jTextFieldID.getText()));

                    float valorTotal = valorTotalDevidoVenda + valotTotalDevidoLocacao;
                    jTextFieldApagarVenda.setText("" + valorTotalDevidoVenda);
                    jTextFieldaApagarLocacao.setText("" + valotTotalDevidoLocacao);
                    jTextFieldTotalLocacaoVenda.setText("" + valorTotal);
                    if (modeloclienteTabela.isBoleto()) {

                        jCheckBox1.setSelected(modeloclienteTabela.isBoleto());
                    }
                    totalapagar();
                    totalapagarVencidas();
                    listarParcelasLocacao(modeloParcelasNpagas);
                    listarParcelas(modeloParcelas);
                    preencherTelaTabelaLastro();
                    preencherTabelaVenda();
                    preencherTabelaHaver();
                    listarParcelasLocacao();
                    listarPagamentos();
                    listarPagamentosdetalhado();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);

                    Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            Connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTableClientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableClientesMouseEntered

    private void jTableParcelaPagamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableParcelaPagamentosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableParcelaPagamentosMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteAbas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteAbas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteAbas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteAbas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ClienteAbas().setVisible(true);
                } catch (SQLException ex) {

                    Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void ativaDesativaCampos(boolean status) {
        if (status == false) {
            jComboBoxRota.setEnabled(false);
            jTextFieldEmail.setEnabled(false);
            jTextFieldRG.setEnabled(false);
            jTextFieldID.setEnabled(false);
            jTextFieldCPF.setEnabled(false);
            jTextFieldCNPJ.setEnabled(false);
            jFormattedTextCEP.setEnabled(false);
            jTextFieldInscricaoMunicipal.setEnabled(false);
            jComboramoATIVIDADES.setEnabled(false);
            jTextFieldNome.setEnabled(false);
            jTextFieldFantasia.setEnabled(false);
            jTextFieldEndereco.setEnabled(false);
            jComboBoxEstado.setEnabled(false);
            jComboBoxCidade.setEnabled(false);
            jComboBoxBairro.setEnabled(false);
            jTextFieldTele1.setEnabled(false);
            jTextFieldTelefone2.setEnabled(false);
            jTextFieldCelular.setEnabled(false);
            jTextFieldFAX.setEnabled(false);
            jTextFieldContato.setEnabled(false);
            jTextAreaOBSERVAÃ‡AO.setEnabled(false);
            jFormattedTextFieldDATA.setEnabled(false);
            jTextFieldinscricaoEstadual.setEnabled(false);
        } else if (status == true) {
            jComboBoxRota.setEnabled(true);
            jTextFieldEmail.setEnabled(true);
            jTextFieldinscricaoEstadual.setEnabled(true);
            jTextFieldRG.setEnabled(true);
            jTextFieldID.setEnabled(true);
            jTextFieldCPF.setEnabled(true);
            jTextFieldCNPJ.setEnabled(true);
            jFormattedTextCEP.setEnabled(true);
            jTextFieldInscricaoMunicipal.setEnabled(true);
            jComboramoATIVIDADES.setEnabled(true);
            jTextFieldNome.setEnabled(true);
            jTextFieldFantasia.setEnabled(true);
            jTextFieldEndereco.setEnabled(true);
            jComboBoxEstado.setEnabled(true);
            jComboBoxCidade.setEnabled(true);
            jComboBoxBairro.setEnabled(true);
            jTextFieldTele1.setEnabled(true);
            jTextFieldTelefone2.setEnabled(true);
            jTextFieldCelular.setEnabled(true);
            jTextFieldFAX.setEnabled(true);
            jTextFieldContato.setEnabled(true);
            jTextAreaOBSERVAÃ‡AO.setEnabled(true);
            jFormattedTextFieldDATA.setEnabled(true);

        }

    }

    public boolean validarArquivoPorNome(String palavra, String caminhoInicial) {
        File file = new File(caminhoInicial);
        File afile[] = file.listFiles();
        int i = 0;
        for (int j = afile.length; i < j; i++) {

            File arquivos = afile[i];

            if (arquivos.getName().equals(palavra)) {

                return true;

            }
        }
        return false;
    }

    public void preencherTabela() throws SQLException {// preenchimento da tabela  ,  linhas e colunas , LuizDOURADO
        try (Connection connection = ConnectionFactory.getConnection()) {
            ClienteDAO clientedao = new ClienteDAO(connection);

            jTableClientes.setModel(clientedao.listaTabela());
            jTableClientes.setRowSorter(new TableRowSorter(clientedao.listaTabela()));
            jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableClientes.getColumnModel().getColumn(0).setResizable(false);
            jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTableClientes.getColumnModel().getColumn(1).setResizable(false);
            jTableClientes.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTableClientes.getColumnModel().getColumn(2).setResizable(false);
            jTableClientes.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTableClientes.getColumnModel().getColumn(3).setResizable(false);
            jTableClientes.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTableClientes.getColumnModel().getColumn(4).setResizable(false);
            jTableClientes.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTableClientes.getColumnModel().getColumn(5).setResizable(false);
            jTableClientes.getColumnModel().getColumn(6).setPreferredWidth(20);
            jTableClientes.getColumnModel().getColumn(6).setResizable(false);
            jTableClientes.getColumnModel().getColumn(7).setPreferredWidth(20);
            jTableClientes.getColumnModel().getColumn(7).setResizable(false);
            jTableClientes.getColumnModel().getColumn(8).setPreferredWidth(20);
            jTableClientes.getColumnModel().getColumn(8).setResizable(false);

            jTableClientes.getTableHeader().setReorderingAllowed(false);
            connection.close();
        }

    }

    public void preencherTabelaVenda() throws SQLException {// preenchimento da tabela  ,  linhas e colunas , LuizDOURADO
        try (Connection connection = ConnectionFactory.getConnection()) {
            VendaDAO vendaDAO = new VendaDAO(connection);

            jTableVendas.setModel(vendaDAO.buscarPorCliente(Long.parseLong(String.valueOf(jTextFieldID.getText()))));
            jTableVendas.setRowSorter(new TableRowSorter(vendaDAO.buscarPorCliente(Long.parseLong(String.valueOf(jTextFieldID.getText())))));
            jTableVendas.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableVendas.getColumnModel().getColumn(0).setResizable(false);
            jTableVendas.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableVendas.getColumnModel().getColumn(1).setResizable(false);
            jTableVendas.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTableVendas.getColumnModel().getColumn(2).setResizable(false);
            jTableVendas.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTableVendas.getColumnModel().getColumn(3).setResizable(false);
            jTableVendas.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTableVendas.getColumnModel().getColumn(4).setResizable(false);

            jTableVendas.getTableHeader().setReorderingAllowed(false);
            connection.close();
        }
    }

    public void preencherTelaTabelaLastro() throws SQLException {// preenchimento da tabela  ,  linhas e colunas , LuizDOURADO

        try (Connection connection = ConnectionFactory.getConnection()) {
            VendaDAO vendaDAO = new VendaDAO(connection);
            TipoAcaoDAO tipoAcaoDAO = new TipoAcaoDAO(connection);
            int locacaoPecas = tipoAcaoDAO.somaPecasLocacaoCliente(Integer.parseInt(jTextFieldID.getText()));
            int devolucaopecas = tipoAcaoDAO.somaPecasDevolucaoCliente(Integer.parseInt(jTextFieldID.getText())) + tipoAcaoDAO.somaPecasVendaCliente(Integer.parseInt(jTextFieldID.getText()));

            int locacaoCilindro = tipoAcaoDAO.somaCilindroLocacaoCliente(Integer.parseInt(jTextFieldID.getText()));
            int devolucaoCilindro = tipoAcaoDAO.somaCilindroDevolucaoCliente(Integer.parseInt(jTextFieldID.getText())) + tipoAcaoDAO.somaCilindroVendaCliente(Integer.parseInt(jTextFieldID.getText()));

            int locacaoConcentrador = tipoAcaoDAO.somaConcentradorLocacaoCliente(Integer.parseInt(jTextFieldID.getText()));
            int devolucaoConcentrador = tipoAcaoDAO.somaConcentradorDevolucaoCliente(Integer.parseInt(jTextFieldID.getText())) + tipoAcaoDAO.somaConcentradorVendaClienteCliente(Integer.parseInt(jTextFieldID.getText()));

            int resultConcentrador = locacaoConcentrador - devolucaoConcentrador;
            int resultPecas = locacaoPecas - devolucaopecas;
            int resultCilindros = locacaoCilindro - devolucaoCilindro;
            jTextFieldPecas.setText("" + resultPecas);
            jTextFieldVasilhames.setText("" + resultCilindros);
            jTextFieldConcentrador.setText("" + resultConcentrador);
            List<ModeloCliente> idclientes = tipoAcaoDAO.listaParaLocacao();

            for (ModeloCliente e : idclientes) {

            }

            jTableLastro.setModel(tipoAcaoDAO.listaTabelaLastroCliente(Integer.parseInt(jTextFieldID.getText())));
            jTableLastro.setRowSorter(new TableRowSorter(tipoAcaoDAO.listaTabelaLastroCliente(Integer.parseInt(jTextFieldID.getText()))));
            jTableLastro.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableLastro.getColumnModel().getColumn(0).setResizable(false);
            jTableLastro.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableLastro.getColumnModel().getColumn(1).setResizable(false);
            jTableLastro.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTableLastro.getColumnModel().getColumn(2).setResizable(false);
            jTableLastro.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTableLastro.getColumnModel().getColumn(3).setResizable(false);
            jTableLastro.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTableLastro.getColumnModel().getColumn(4).setResizable(false);
            jTableLastro.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTableLastro.getColumnModel().getColumn(5).setResizable(false);

            jTableVendas.getTableHeader().setReorderingAllowed(false);
            connection.close();
        }
    }

    private void listarParcelasLocacao() {
        Connection connection;
        try {
            connection = new ConnectionFactory().getConnection();

            ParcelaDAO parcelaDAO = new ParcelaDAO(connection);

            List<ModeloParcela> modeloParcelas = new ArrayList<ModeloParcela>();
            modeloParcelas = parcelaDAO.listaLocacao(Long.parseLong(jTextFieldID.getText()));

            String[] colunas = new String[]{"ID", "Referencia", "Valor", "CondiÃ§Ã£o", "Data Vencimento", "Data Pagamento"};
            ArrayList dados = new ArrayList();
            Date teste;
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            SimpleDateFormat format2 = new SimpleDateFormat("MM/yyyy");

            Calendar data = Calendar.getInstance();
            String referencia = "";
            for (ModeloParcela v : modeloParcelas) {
                if (v.isEstatosParcela()) {

                    data.setTime(v.getDataPagamento());
                    data.add(data.MONTH, -1);

                    referencia = v.getId() + "_" + format2.format(data.getTime());

                    dados.add(new Object[]{v.getId(), logica.Duplicata.gerarReferencia(v.getId()), v.getValor(), "Pago", format.format(v.getDataVencimento().getTime()), format.format(v.getDataPagamento())});
                } else if (!v.isEstatosParcela()) {
                    dados.add(new Object[]{v.getId(), logica.Duplicata.gerarReferencia(v.getId()), v.getValor(), "NÃ£o Pago", format.format(v.getDataVencimento().getTime()), "00/00/0000"});
                }
            }
            ModeloTabela modelo = new ModeloTabela(dados, colunas);
            jTableLocacao.setModel(modelo);
            jTableLocacao.setRowSorter(new TableRowSorter(modelo));
            jTableLocacao.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableLocacao.getColumnModel().getColumn(0).setResizable(false);
            jTableLocacao.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableLocacao.getColumnModel().getColumn(1).setResizable(false);
            jTableLocacao.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTableLocacao.getColumnModel().getColumn(2).setResizable(false);
            jTableLocacao.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTableLocacao.getColumnModel().getColumn(3).setResizable(false);
            jTableLocacao.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTableLocacao.getColumnModel().getColumn(4).setResizable(false);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(Locacao.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void listarParcelasLocacao(List<ModeloParcela> modeloParcelas) throws SQLException {

        String[] colunas = new String[]{"ID da parcela", "Referencia", "CondiÃ§Ã£o", "Valor", "Valor Pago", "Data Pagamento", "Data Vencimento"};
        ArrayList dados = new ArrayList();
        Date teste;
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Connection connection = new ConnectionFactory().getConnection();
        ParcelaDAO parcelaDAO = new ParcelaDAO(connection);

        for (ModeloParcela v : modeloParcelas) {
            if (v.isEstatosParcela()) {
                dados.add(new Object[]{v.getId(), logica.Duplicata.gerarReferencia(v.getId()), "Pago", v.getValor(), parcelaDAO.SomaTotalValorPagoPorParcela(v.getId()), format.format(v.getDataPagamento()), format.format(v.getDataVencimento())});
            } else if (!v.isEstatosParcela()) {
                dados.add(new Object[]{v.getId(), logica.Duplicata.gerarReferencia(v.getId()), "NÃ£o Pago", v.getValor(), parcelaDAO.SomaTotalValorPagoPorParcela(v.getId()), "00/00/0000", format.format(v.getDataVencimento().getTime())});
            }
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        jTableParcelasLocacaoNPagas.setModel(modelo);
        jTableParcelasLocacaoNPagas.setRowSorter(new TableRowSorter(modelo));
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(0).setPreferredWidth(2);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(0).setResizable(false);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(1).setPreferredWidth(10);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(1).setResizable(false);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(2).setPreferredWidth(10);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(2).setResizable(false);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(3).setPreferredWidth(10);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(3).setResizable(false);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(4).setPreferredWidth(10);
        jTableParcelasLocacaoNPagas.getColumnModel().getColumn(4).setResizable(false);
        connection.close();
    }

    private void listarParcelas(List<ModeloParcela> modeloParcelas) throws SQLException {
        String[] colunas = new String[]{"ID da parcela", "NÂ° da Venda", "CondiÃ§Ã£o", "Valor", "Valor Pago", "Data Vencimento", "Data Pagamento", "Numero de Grafica"};
        ArrayList dados = new ArrayList();
        Date teste;
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        Connection connection = new ConnectionFactory().getConnection();
        ParcelaDAO parcelaDAO = new ParcelaDAO(connection);
        PedidoDAO pedidoDAO = new PedidoDAO(connection);

        int numerografica = 0;
        for (ModeloParcela v : modeloParcelas) {
            ModeloPedido modeloPedido = pedidoDAO.buscaPorVenda(Integer.parseInt(String.valueOf(v.getIdVenda())));
            System.out.println(v.getId());
            if (v.isEstatosParcela()) {
                System.out.println("id parcela " + v.getId());
                System.out.println("id venda: " + v.getIdVenda());
                System.out.println("Valor " + v.getValor());
                System.out.println("valor pago: " + parcelaDAO.SomaTotalValorPagoPorParcela(v.getId()));
                System.out.println("data vencimento: " + format.format(v.getDataVencimento().getTime()));
                System.out.println("data pagamento: " + format.format(v.getDataPagamento().getTime()));
                System.out.println("numero grafica: " + modeloPedido.getId());

                dados.add(new Object[]{v.getId(), v.getIdVenda(), "Pago", v.getValor(), parcelaDAO.SomaTotalValorPagoPorParcela(v.getId()), format.format(v.getDataVencimento().getTime()), format.format(v.getDataPagamento().getTime()), modeloPedido.getNumeroGrafica()});
            } else if (!v.isEstatosParcela()) {

                dados.add(new Object[]{v.getId(), v.getIdVenda(), "NÃ£o Pago", v.getValor(), parcelaDAO.SomaTotalValorPagoPorParcela(v.getId()), format.format(v.getDataVencimento().getTime()), "00/00/0000", modeloPedido.getNumeroGrafica()});
            }
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        jTableParcelasVendaNPagas.setModel(modelo);
        jTableParcelasVendaNPagas.setRowSorter(new TableRowSorter(modelo));
        jTableParcelasVendaNPagas.getColumnModel().getColumn(0).setPreferredWidth(2);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(0).setResizable(false);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(1).setPreferredWidth(10);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(1).setResizable(false);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(2).setPreferredWidth(10);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(2).setResizable(false);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(3).setPreferredWidth(10);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(3).setResizable(false);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(4).setPreferredWidth(10);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(4).setResizable(false);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(5).setPreferredWidth(10);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(5).setResizable(false);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(6).setPreferredWidth(10);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(6).setResizable(false);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(7).setPreferredWidth(10);
        jTableParcelasVendaNPagas.getColumnModel().getColumn(7).setResizable(false);
        connection.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup12;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonBairro;
    private javax.swing.JButton jButtonCidade;
    private javax.swing.JButton jButtonEstado;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<Object> jComboBoxBairro;
    private javax.swing.JComboBox<Object> jComboBoxCidade;
    private javax.swing.JComboBox<Object> jComboBoxEstado;
    private javax.swing.JComboBox<Object> jComboBoxRota;
    private javax.swing.JComboBox<Object> jComboramoATIVIDADES;
    private javax.swing.JFormattedTextField jFormattedTextCEP;
    private javax.swing.JFormattedTextField jFormattedTextFieldDATA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButtonCNPJ;
    private javax.swing.JRadioButton jRadioButtonCPF;
    private javax.swing.JRadioButton jRadioButtonEndereco;
    private javax.swing.JRadioButton jRadioButtonID;
    private javax.swing.JRadioButton jRadioButtonNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTable jTableHaver;
    private javax.swing.JTable jTableLastro;
    private javax.swing.JTable jTableLocacao;
    private javax.swing.JTable jTableParcelaPagamentos;
    private javax.swing.JTable jTableParcelasLocacaoNPagas;
    private javax.swing.JTable jTableParcelasVendaNPagas;
    private javax.swing.JTable jTableVendas;
    private javax.swing.JTextArea jTextAreaOBSERVAÃ‡AO;
    private javax.swing.JTextField jTextFieldApagarVencidasVenda;
    private javax.swing.JTextField jTextFieldApagarVenda;
    private javax.swing.JFormattedTextField jTextFieldCNPJ;
    private javax.swing.JFormattedTextField jTextFieldCPF;
    private javax.swing.JFormattedTextField jTextFieldCelular;
    private javax.swing.JTextField jTextFieldConcentrador;
    private javax.swing.JTextField jTextFieldContato;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JFormattedTextField jTextFieldFAX;
    private javax.swing.JTextField jTextFieldFantasia;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldIDParaPesquisa;
    private javax.swing.JFormattedTextField jTextFieldInscricaoMunicipal;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPecas;
    private javax.swing.JTextField jTextFieldRG;
    private javax.swing.JFormattedTextField jTextFieldTele1;
    private javax.swing.JFormattedTextField jTextFieldTelefone2;
    private javax.swing.JTextField jTextFieldTotalLocacaoVenda;
    private javax.swing.JTextField jTextFieldTotalLocacaoVendaVencidas;
    private javax.swing.JTextField jTextFieldVasilhames;
    private javax.swing.JTextField jTextFieldaApagarLocacao;
    private javax.swing.JTextField jTextFieldaApagarLocacaoVencidas;
    private javax.swing.JTextField jTextFieldinscricaoEstadual;
    private javax.swing.JTextField jTextFieldnVenda;
    private javax.swing.JLabel validacaoCNPJ;
    private javax.swing.JLabel validacaoCPF;
    private javax.swing.JLabel validacaoCep;
    private javax.swing.JLabel validacaoContato;
    private javax.swing.JLabel validacaoData;
    private javax.swing.JLabel validacaoEndereco;
    private javax.swing.JLabel validacaoFantasia;
    private javax.swing.JLabel validacaoInscricaoMunicipal;
    private javax.swing.JLabel validacaoNome;
    private javax.swing.JLabel validacaoRG;
    private javax.swing.JLabel validacaoTelefone;
    // End of variables declaration//GEN-END:variables
private String validacao() throws SQLException {
        Connection connection = new ConnectionFactory().getConnection();
        ClienteDAO clienteDAO = new ClienteDAO(connection);
        String cpf = jTextFieldCPF.getText();
        cpf = cpf.replace(".", "");
        cpf = cpf.replace("-", "");
        String validar = "";
        String cnpj = jTextFieldCNPJ.getText();
        cnpj = cnpj.replace(".", "");
        cnpj = cnpj.replace("-", "");
        cnpj = cnpj.replace("/", "");

        int cont = 0;
        if (jTextFieldNome.getText().isEmpty()) {
            validar += "nome ";
            validacaoNome.setVisible(true);
            cont++;
        }

        if (!logica.LogicasPedido.validaData(jFormattedTextFieldDATA.getText())) {
            validar += "\n" + "data invalida  ";
            validacaoFantasia.setVisible(true);
            cont++;

        }

        if (jTextFieldEndereco.getText().isEmpty()) {
            validar += "\n" + "endereco ";
            validacaoEndereco.setVisible(true);
            cont++;
        }

        if ((ValidaCNPJ.isCNPJ(cnpj) || (ValidaCPF.isCPF(cpf)))) {

        } else {
            validar += "\n" + "CNPJ ou CPF ";
            validacaoCNPJ.setVisible(true);
            validacaoCPF.setVisible(true);
            if (ValidaCNPJ.isCNPJ(cnpj) == false) {
                validar += "\n" + "CNPJ Invalido ";
            }
            if (ValidaCPF.isCPF(cpf) == false) {
                validar += "\n" + "cpf Invalido ";

            }

            cont++;
        }
        if (jCheckBox1.isSelected()) {
            if (!ValidaCNPJ.isCNPJ(cnpj) || jTextFieldEmail.getText() == "") {
                validar += "\n" + "Para habilitar envio de boleto precisa ter cnpj e email";
            }
        }
        if ((!(jTextFieldRG.getText().isEmpty()) || !(jTextFieldInscricaoMunicipal.getText().isEmpty())) || !(jTextFieldinscricaoEstadual.getText().isEmpty())) {

        } else {
            validar += "\n" + "Rg ou InscriÃ§oes municipal ou estadual ";
            cont++;
        }
        String tam = jTextAreaOBSERVAÃ‡AO.getText();
        if (tam.length() <= 500) {

        } else {
            validar = "MÃ¡ximo de 400 caracteres para o campo ObservaÃ§Ã£o \n" + validar;
        }

        if (cont != 0) {
            validar = "Campos obrigatorios: \n" + validar;

        }

        return validar;
    }

    public void desativaLableValidation() {
        validacaoRG.setVisible(false);
        validacaoCNPJ.setVisible(false);
        validacaoCPF.setVisible(false);
        validacaoCep.setVisible(false);
        validacaoContato.setVisible(false);
        validacaoData.setVisible(false);
        validacaoEndereco.setVisible(false);
        validacaoFantasia.setVisible(false);
        validacaoInscricaoMunicipal.setVisible(false);
        validacaoNome.setVisible(false);
        validacaoRG.setVisible(false);
        validacaoTelefone.setVisible(false);
    }

    public void atualizar() {
        jCheckBox1.setSelected(false);
        jButton1.setVisible(true);
        ativaDesativaCampos(false);

        String Id = "" + jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 0);        // TODO add your handling code here:
        limparCampos();
        ModeloRamoAtividade modeloRamoTabela = new ModeloRamoAtividade();
        ModeloRota modeloRotatabela = new ModeloRota();
        ModeloEstado modeloEstadoTabela = new ModeloEstado();
        ModeloBairro modelobairroTabela = new ModeloBairro();
        ModeloCidades modelocidadeTabela = new ModeloCidades();
        ModeloCliente modeloclienteTabela = new ModeloCliente();

        try {

            Connection Connection = new ConnectionFactory().getConnection();
            CidadeDAO cidadeDAO = new CidadeDAO(Connection);
            EstadoDAO estadoDAO = new EstadoDAO(Connection);
            BairroDAO bairroDAO = new BairroDAO(Connection);
            ClienteDAO clienteDAO = new ClienteDAO(Connection);
            RotasDAO rotasDAO = new RotasDAO(Connection);
            RamoAtividadeDAO ramoatividadeDAO = new RamoAtividadeDAO(Connection);
            modeloclienteTabela = clienteDAO.buscaPorId(Long.parseLong(Id));
            modeloEstadoTabela = estadoDAO.buscaPorId(modeloclienteTabela.getEstado());
            modelocidadeTabela = cidadeDAO.buscaPorId(modeloclienteTabela.getCidade());
            modelobairroTabela = bairroDAO.buscaPorId(modeloclienteTabela.getBairro());
            modeloRamoTabela = ramoatividadeDAO.buscaPorId(modeloclienteTabela.getRamoAtividade());
            modeloRotatabela = rotasDAO.buscaPorId(modeloclienteTabela.getRota());

            for (int i = 0; i < jComboBoxEstado.getItemCount(); ++i) {

                ModeloEstado modeloEstadoTabela2 = (ModeloEstado) jComboBoxEstado.getItemAt(i);
                if (modeloEstadoTabela.getId().equals(modeloEstadoTabela2.getId())) {
                    jComboBoxEstado.setSelectedIndex(i);
                    break;

                }
            }

            for (int i = 0; i < jComboBoxCidade.getItemCount(); ++i) {
                ModeloCidades modeloCidades2 = (ModeloCidades) jComboBoxCidade.getItemAt(i);

                if (modelocidadeTabela.getCodig().equals(modeloCidades2.getCodig())) {

                    jComboBoxCidade.setSelectedIndex(i);
                    break;

                }
            }

            for (int i = 0; i < jComboBoxBairro.getItemCount(); ++i) {
                ModeloBairro modeloBairro2 = (ModeloBairro) jComboBoxBairro.getItemAt(i);

                if (modelobairroTabela.getCodBairro().equals(modeloBairro2.getCodBairro())) {

                    jComboBoxBairro.setSelectedIndex(i);
                    break;

                }
            }
            for (int i = 0; i < jComboramoATIVIDADES.getItemCount(); ++i) {
                ModeloRamoAtividade modeloRamoAtividade2 = (ModeloRamoAtividade) jComboramoATIVIDADES.getItemAt(i);

                if (modeloRamoTabela.getId().equals(modeloRamoAtividade2.getId())) {

                    jComboramoATIVIDADES.setSelectedIndex(i);
                    break;

                }
            }

            for (int i = 0; i < jComboBoxRota.getItemCount(); ++i) {
                ModeloRota modeloRota2 = (ModeloRota) jComboBoxRota.getItemAt(i);

                if (modeloRotatabela.getId().equals(modeloRota2.getId())) {

                    jComboBoxRota.setSelectedIndex(i);
                    break;

                }
            }

            jTextFieldID.setText(Id);

            jTextFieldRG.setText(modeloclienteTabela.getRg());
            jTextFieldCPF.setText(modeloclienteTabela.getCpf());
            jTextFieldCNPJ.setText(modeloclienteTabela.getCnpj());
            jFormattedTextCEP.setText(modeloclienteTabela.getCep());
            jTextFieldInscricaoMunicipal.setText(modeloclienteTabela.getInscricaoMunicipal());

            jTextFieldNome.setText(modeloclienteTabela.getNome());
            jTextFieldFantasia.setText(modeloclienteTabela.getNomeFantasia());
            jTextFieldEndereco.setText(modeloclienteTabela.getEndereco());

            jTextFieldTele1.setText(modeloclienteTabela.getTelefone());
            jTextFieldTelefone2.setText(modeloclienteTabela.getTelefone1());
            jTextFieldCelular.setText(modeloclienteTabela.getCelular());

            jTextFieldFAX.setText(modeloclienteTabela.getFax());
            jTextFieldContato.setText(modeloclienteTabela.getContato());
            jTextAreaOBSERVAÃ‡AO.setText(modeloclienteTabela.getObservacao());
            jTextFieldinscricaoEstadual.setText(modeloclienteTabela.getInscricaoEstadual());
            jTextFieldEmail.setText(modeloclienteTabela.geteMail());

            String data1 = String.valueOf(modeloclienteTabela.getDataCadastro());
            String data3[] = data1.split(Pattern.quote("-"));

            String ano = data3[0];
            String mes = data3[1];
            String dia = data3[2];
            String dataSalvar = dia + mes + ano;

            jFormattedTextFieldDATA.setText(dataSalvar);

            if (!jTextFieldID.getText().isEmpty()) {
                try {
                    Connection connection = new ConnectionFactory().getConnection();
                    ParcelaDAO parcelasDAO = new ParcelaDAO(connection);
                    List<ModeloParcela> modeloParcelas = parcelasDAO.listaPoridClienteVenda(Long.parseLong(jTextFieldID.getText()));
                    List<ModeloParcela> modeloParcelasNpagas = parcelasDAO.listaPorNPagoIdCliente(Long.parseLong(jTextFieldID.getText()));
                    

                    if (modeloclienteTabela.isBoleto()) {

                        jCheckBox1.setSelected(modeloclienteTabela.isBoleto());
                    }
                    totalapagar();
                    totalapagarVencidas();
                    listarParcelasLocacao(modeloParcelasNpagas);
                    listarParcelas(modeloParcelas);
                    preencherTelaTabelaLastro();
                    preencherTabelaVenda();
                    preencherTabelaHaver();
                    listarParcelasLocacao();
                    listarPagamentos();
                    listarPagamentosdetalhado();
                    connection.close();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);

                    Logger.getLogger(ClienteAbas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            Connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }

    public void confirmarPressedEnter() {
        InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "forward");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("forward", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {

                jButtonPesquisar.doClick();
            }
        });
    }

    public void limparCampos() {
        jTextFieldID.setText("");
        jTextFieldEmail.setText("");
        jTextFieldID.removeAll();
        jTextFieldRG.setText("");
        jTextFieldCPF.setText("");
        jTextFieldCNPJ.setText("");
        jTextFieldInscricaoMunicipal.setText("");
        jTextFieldinscricaoEstadual.setText("");
        jComboramoATIVIDADES.setToolTipText("");
        jTextFieldNome.setText("");
        jTextFieldFantasia.setText("");
        jTextFieldEndereco.setText("");
        jComboBoxEstado.setToolTipText("");
        jComboBoxCidade.setToolTipText("");
        jComboBoxBairro.setToolTipText("");
        jTextFieldTele1.setText("");
        jTextFieldTelefone2.setText("");
        jTextFieldCelular.setText("");
        jTextFieldFAX.setText("");
        jTextFieldContato.setText("");
        jTextAreaOBSERVAÃ‡AO.setText("");
        jFormattedTextCEP.setText("");
        jTextFieldinscricaoEstadual.setText("");

    }
    private DefaultStyledDocument doc;

    private void preencherTabelaHaver() {
        try {
            Connection Connection = new ConnectionFactory().getConnection();
            HaverDAO haverDAO = new HaverDAO(Connection);

            jTableHaver.setModel(haverDAO.listaValePorCliente(Long.parseLong(jTextFieldID.getText())));

            jTableHaver.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableHaver.getColumnModel().getColumn(0).setResizable(false);
            jTableHaver.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableHaver.getColumnModel().getColumn(1).setResizable(false);

            jTableHaver.getTableHeader().setReorderingAllowed(false);
            Connection.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void totalapagar() throws SQLException {
        Connection connection = new ConnectionFactory().getConnection();
        ParcelaDAO parcelasDAO = new ParcelaDAO(connection);
        float valorAPagarVenda = parcelasDAO.SomaTotalValorPagarVenda(Long.parseLong(jTextFieldID.getText()));

        float valorPagoVenda = parcelasDAO.SomaTotalValorPagoVenda(Long.parseLong(jTextFieldID.getText()));

        float valorTotalDevidoVenda = valorAPagarVenda - valorPagoVenda;

        float valotTotalDevidoLocacao = parcelasDAO.SomaTotalValorASerpagoLocaÃ§Ã£o(Long.parseLong(jTextFieldID.getText()));
        float valorPagoLocacao = parcelasDAO.SomaTotalValorPagoLocaÃ§Ã£o(Long.parseLong(jTextFieldID.getText()));

        float valorTotal = valorTotalDevidoVenda + valotTotalDevidoLocacao;
        jTextFieldApagarVenda.setText("" + valorTotalDevidoVenda);
        jTextFieldaApagarLocacao.setText("" + valotTotalDevidoLocacao);
        jTextFieldTotalLocacaoVenda.setText("" + valorTotal);
        connection.close();
    }

    private void totalapagarVencidas() throws SQLException {
        Connection connection = new ConnectionFactory().getConnection();
        ParcelaDAO parcelasDAO = new ParcelaDAO(connection);
        float valorAPagarVendaVencidas = parcelasDAO.SomaTotalValorPagarVendaVencidas(Long.parseLong(jTextFieldID.getText()));

        float valorPagoVendaVencidas = parcelasDAO.SomaTotalValorPagoVendaVencidos(Long.parseLong(jTextFieldID.getText()));

        float valorTotalDevidoVendaVencidas = valorAPagarVendaVencidas - valorPagoVendaVencidas;

        float valotTotalDevidoLocacaoVencidas = parcelasDAO.SomaTotalValorASerpagoLocaÃ§Ã£oVencidas(Long.parseLong(jTextFieldID.getText()));
        float valorPagoLocacaoVencidas = parcelasDAO.SomaTotalValorPagoLocaÃ§Ã£oVencidas(Long.parseLong(jTextFieldID.getText()));

        float valorTotalVencidas = valorTotalDevidoVendaVencidas + valotTotalDevidoLocacaoVencidas;
        jTextFieldApagarVencidasVenda.setText("" + valorTotalDevidoVendaVencidas);
        jTextFieldaApagarLocacaoVencidas.setText("" + valotTotalDevidoLocacaoVencidas);
        jTextFieldTotalLocacaoVendaVencidas.setText("" + valorTotalVencidas);
        connection.close();
    }

    private void listarPagamentos() {
     try {
            Connection Connection = new ConnectionFactory().getConnection();
            ClienteDAO clienteDAO = new ClienteDAO(Connection);

            jTableParcelaPagamentos.setModel(clienteDAO.listaPagamentos(Long.parseLong(jTextFieldID.getText())));

            jTableParcelaPagamentos.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableParcelaPagamentos.getColumnModel().getColumn(0).setResizable(false);
            jTableParcelaPagamentos.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableParcelaPagamentos.getColumnModel().getColumn(1).setResizable(false);

            jTableParcelaPagamentos.getTableHeader().setReorderingAllowed(false);
            Connection.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }   
    
    }
    private void listarPagamentosdetalhado() {
     try {
            Connection Connection = new ConnectionFactory().getConnection();
            ClienteDAO clienteDAO = new ClienteDAO(Connection);

            jTable1.setModel(clienteDAO.listaPagamentosDetalhado(Long.parseLong(jTextFieldID.getText())));

            jTable1.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
             jTable1.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(2).setResizable(false);

            jTable1.getTableHeader().setReorderingAllowed(false);
            Connection.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);

            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }   
    
    }

}
