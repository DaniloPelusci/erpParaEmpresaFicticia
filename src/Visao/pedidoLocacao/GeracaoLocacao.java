/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.pedidoLocacao;

import DAO.ConnectionFactory;
import DAO.TipoAcaoDAO;
import DAO.venda.ParcelaDAO;
import Modelo.venda.ModeloParcela;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author E.B.O 2
 */
public class GeracaoLocacao extends javax.swing.JFrame {

    /**
     * Creates new form GeracaoLocacao
     */
    public GeracaoLocacao(int idCliente) throws SQLException, ParseException {
        initComponents();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Calendar horaAtual = Calendar.getInstance();

        // Ou qualquer outra forma que tem
        String dataFormatada = sdf.format(horaAtual.getTime());
        jFormattedTextFieldDATA.setText(dataFormatada);
        jTextFieldidCliente.setText("" + idCliente);
        lastro();
        
       
    }

    private GeracaoLocacao() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldValorUnitario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jCheckBoxCilindro = new javax.swing.JCheckBox();
        jCheckBoxPeca = new javax.swing.JCheckBox();
        jCheckBoxConcentrador = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldidCliente = new javax.swing.JTextField();
        jTextFieldPeça = new javax.swing.JTextField();
        jTextFieldConcentrador = new javax.swing.JTextField();
        jTextFieldCilindro = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextFieldTotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jFormattedTextFieldDATA = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("E.B.O. Locação");

        jLabel3.setText("Referente ao mes dê:");

        jLabel1.setText("Valor Unitario");

        jButton1.setText("Gerar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBoxCilindro.setText("Cilindro");

        jCheckBoxPeca.setText("Peça");

        jCheckBoxConcentrador.setText("Concentrador");

        jLabel2.setText("ID Cliente");

        jButton2.setText("Salvar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Total");

        try {
            jFormattedTextFieldDATA.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldDATA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFormattedTextFieldDATAFocusLost(evt);
            }
        });

        jLabel6.setText("Data inical de referencia:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 265, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jCheckBoxCilindro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextFieldCilindro))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jCheckBoxPeca)
                                            .addComponent(jTextFieldPeça, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jCheckBoxConcentrador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextFieldConcentrador, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldTotal)
                                        .addGap(166, 166, 166)))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(jButton2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextFieldidCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jFormattedTextFieldDATA, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldidCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel6)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jFormattedTextFieldDATA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldValorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxCilindro)
                            .addComponent(jCheckBoxPeca))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPeça, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldCilindro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxConcentrador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldConcentrador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        double multiplicador = 0;
        double valorUnitario = 0;
        double total = 0;
        if (!(jTextFieldValorUnitario.getText().equals(""))) {
            if ((jCheckBoxCilindro.isSelected() || jCheckBoxConcentrador.isSelected() || jCheckBoxPeca.isSelected())) {
                if (jCheckBoxCilindro.isSelected()) {

                    if (Integer.parseInt(jTextFieldCilindro.getText()) <= 0) {
                        JOptionPane.showMessageDialog(null, "Não ha cilindro locado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        multiplicador = Double.parseDouble(jTextFieldCilindro.getText());
                        valorUnitario = Double.parseDouble(jTextFieldValorUnitario.getText());
                        total += multiplicador * valorUnitario;

                    }
                }
                if (jCheckBoxConcentrador.isSelected()) {
                    if (Integer.parseInt(jTextFieldConcentrador.getText()) <= 0) {
                        JOptionPane.showMessageDialog(null, "Não ha concentrador locado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        multiplicador = Double.parseDouble(jTextFieldConcentrador.getText());
                        valorUnitario = Double.parseDouble(jTextFieldValorUnitario.getText());
                        total += multiplicador * valorUnitario;

                    }
                }
                if (jCheckBoxPeca.isSelected()) {
                    if (Integer.parseInt(jTextFieldPeça.getText()) <= 0) {
                        JOptionPane.showMessageDialog(null, "Não ha peça locado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        multiplicador = Double.parseDouble(jTextFieldPeça.getText());
                        valorUnitario = Double.parseDouble(jTextFieldValorUnitario.getText());
                        total += multiplicador * valorUnitario;

                    }

                }
                jTextFieldTotal.setText("" + total);

            } else {
                JOptionPane.showMessageDialog(null, "Marque o item do aluguel", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Insira o valor unitario", "Aviso", JOptionPane.INFORMATION_MESSAGE);

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //para saber que é uma locação o tipodeparcela seria false
        try {
            Connection connection = ConnectionFactory.getConnection();
            ParcelaDAO parcelaDAO = new ParcelaDAO(connection);
            ModeloParcela modeloParcela = new ModeloParcela();
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

            Date dataVencimento = new java.sql.Date(format.parse((String) jComboBox1.getSelectedItem()).getTime());

            Calendar cal = Calendar.getInstance();
            cal.setTime(dataVencimento);

            //cal.add(cal.MONTH, 1);

            String oi = format.format(cal.getTime());
            dataVencimento = format.parse(oi);

            modeloParcela.setTipoParcela(false);
            modeloParcela.setDataVencimento(dataVencimento);

            modeloParcela.setIdCliente(Long.parseLong(jTextFieldidCliente.getText()));

            if (!jTextFieldTotal.getText().isEmpty()) {
                if (!parcelaDAO.verificaparcela(modeloParcela)) {
                    BigDecimal b = new BigDecimal(jTextFieldTotal.getText());
                    modeloParcela.setValor(b);
                    parcelaDAO.adicionaLocacao(modeloParcela);
                    JOptionPane.showMessageDialog(null, "Locação gerada com sucesso" );
                            
                } else {
                    JOptionPane.showMessageDialog(null, "Já tem locação gerada neste mes", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Valor não gerado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
            connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(GeracaoLocacao.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(GeracaoLocacao.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFormattedTextFieldDATAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDATAFocusLost
        try {
            lastro();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(GeracaoLocacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jFormattedTextFieldDATAFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeracaoLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeracaoLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeracaoLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeracaoLocacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeracaoLocacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBoxCilindro;
    private javax.swing.JCheckBox jCheckBoxConcentrador;
    private javax.swing.JCheckBox jCheckBoxPeca;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextFieldDATA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldCilindro;
    private javax.swing.JTextField jTextFieldConcentrador;
    private javax.swing.JTextField jTextFieldPeça;
    private javax.swing.JTextField jTextFieldTotal;
    private javax.swing.JTextField jTextFieldValorUnitario;
    private javax.swing.JTextField jTextFieldidCliente;
    // End of variables declaration//GEN-END:variables
 private void lastro() throws ParseException {
        try {
            jComboBox1.removeAllItems();
            jTextFieldTotal.setText("");
            jTextFieldCilindro.setText("");
            jTextFieldConcentrador.setText("");
            jTextFieldPeça.setText("");

            //Date dataAtual = new Date(System.currentTimeMillis());
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            String oi = "";
            
            String stringDataSalvar = jFormattedTextFieldDATA.getText();
           

            Date dataAtual = new java.sql.Date(format.parse(stringDataSalvar).getTime());
            
            
            Calendar cal = Calendar.getInstance();
            for (int i = 0; i < 10; i++) {

                cal.setTime(dataAtual);

                cal.add(cal.MONTH, i);

                oi = format.format(cal.getTime());

                jComboBox1.addItem("" + oi);

            }

            Connection connection;

            connection = ConnectionFactory.getConnection();

            TipoAcaoDAO tipoAcaoDAO = new TipoAcaoDAO(connection);
            int resultCilindros = 0;
            int resultConcentrador = 0;
            int resultPecas = 0;

            int locacaoCilindro = tipoAcaoDAO.somaCilindroLocacaoCliente(Integer.parseInt(jTextFieldidCliente.getText()));
            int devolucaoCilindro = tipoAcaoDAO.somaCilindroDevolucaoCliente(Integer.parseInt(jTextFieldidCliente.getText())) + tipoAcaoDAO.somaCilindroVendaCliente(Integer.parseInt(jTextFieldidCliente.getText()));
            resultCilindros = locacaoCilindro - devolucaoCilindro;
            jTextFieldCilindro.setText("" + resultCilindros);
            int locacaoConcentrador = tipoAcaoDAO.somaConcentradorLocacaoCliente(Integer.parseInt(jTextFieldidCliente.getText()));
            int devolucaoConcentrador = tipoAcaoDAO.somaConcentradorDevolucaoCliente(Integer.parseInt(jTextFieldidCliente.getText())) + tipoAcaoDAO.somaConcentradorVendaClienteCliente(Integer.parseInt(jTextFieldidCliente.getText()));
            resultConcentrador = locacaoConcentrador - devolucaoConcentrador;
            jTextFieldConcentrador.setText("" + resultConcentrador);
            int locacaoPecas = tipoAcaoDAO.somaPecasLocacaoCliente(Integer.parseInt(jTextFieldidCliente.getText()));
            int devolucaopecas = tipoAcaoDAO.somaPecasDevolucaoCliente(Integer.parseInt(jTextFieldidCliente.getText())) + tipoAcaoDAO.somaPecasVendaCliente(Integer.parseInt(jTextFieldidCliente.getText()));
            resultPecas = locacaoPecas - devolucaopecas;
            jTextFieldPeça.setText("" + resultPecas);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Multlocacao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
