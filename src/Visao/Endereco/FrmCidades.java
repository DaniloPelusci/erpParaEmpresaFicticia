/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.Endereco;

import DAO.CidadeDAO;
import DAO.EstadoDAO;
import DAO.ConnectionFactory;
import Modelo.ModeloEstado;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import Modelo.ModeloCidades;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;
//import java.util.List;

/**
 *
 * @author Familia Nascimento
 */
public final class FrmCidades extends javax.swing.JFrame {

    ModeloEstado modeloEstado = new ModeloEstado();
    ModeloCidades modeloCidade = new ModeloCidades();

    /**
     * Creates new form FrmCidades
     *
     * @throws java.sql.SQLException
     */
    public FrmCidades() throws SQLException {
        initComponents();
        java.util.List<ModeloEstado> estados;

        Connection connection = ConnectionFactory.getConnection();
        EstadoDAO EstadoDao = new EstadoDAO(connection);
        estados = EstadoDao.lista();

        jComboBoxEstado.removeAllItems();
        PreencherTabela();
        for (ModeloEstado e : estados) {
            jComboBoxEstado.addItem(e);
        }
        connection.close();

    }

    public void PreencherTabela() throws SQLException {
        try (Connection connection = ConnectionFactory.getConnection()) {
            CidadeDAO CidadeDao = new CidadeDAO(connection);

            jTableCIDADE.setModel(CidadeDao.listaTabela());
            jTableCIDADE.setRowSorter(new TableRowSorter(CidadeDao.listaTabela()));
            jTableCIDADE.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTableCIDADE.getColumnModel().getColumn(0).setResizable(false);
            jTableCIDADE.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTableCIDADE.getColumnModel().getColumn(1).setResizable(false);
            jTableCIDADE.getColumnModel().getColumn(2).setPreferredWidth(40);
            jTableCIDADE.getColumnModel().getColumn(2).setResizable(false);
            jTableCIDADE.getTableHeader().setReorderingAllowed(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxEstado = new javax.swing.JComboBox<>();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldNomeCidade = new javax.swing.JTextField();
        jButtonNovo = new javax.swing.JButton();
        jButtonSALVAR = new javax.swing.JButton();
        jButtonALTERAR = new javax.swing.JButton();
        jButtonPESQUISAR = new javax.swing.JButton();
        jButtonSAIR = new javax.swing.JButton();
        jButtonEXCLUIR = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCIDADE = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("E.B.O. Cadastro de  Cidades  ");
        setResizable(false);

        jLabel1.setText("ID");

        jLabel2.setText("Nome da Cidade");

        jLabel3.setText("Estado");

        jComboBoxEstado.setToolTipText("Selecione uma Cidade");
        jComboBoxEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEstadoActionPerformed(evt);
            }
        });

        jTextFieldCodigo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldCodigo.setEnabled(false);

        jButtonNovo.setText("NOVO");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSALVAR.setText("SALVAR");
        jButtonSALVAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSALVARActionPerformed(evt);
            }
        });

        jButtonALTERAR.setText("ALTERAR");
        jButtonALTERAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonALTERARActionPerformed(evt);
            }
        });

        jButtonPESQUISAR.setText("PESQUISAR");
        jButtonPESQUISAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPESQUISARActionPerformed(evt);
            }
        });

        jButtonSAIR.setText("SAIR");
        jButtonSAIR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSAIRMouseClicked(evt);
            }
        });
        jButtonSAIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSAIRActionPerformed(evt);
            }
        });

        jButtonEXCLUIR.setText("EXCLUIR");
        jButtonEXCLUIR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEXCLUIRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldCodigo))
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldNomeCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSALVAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonALTERAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonPESQUISAR)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonEXCLUIR)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSAIR)))
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNomeCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonSALVAR)
                    .addComponent(jButtonALTERAR)
                    .addComponent(jButtonPESQUISAR)
                    .addComponent(jButtonSAIR)
                    .addComponent(jButtonEXCLUIR))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableCIDADE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableCIDADE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCIDADEMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableCIDADE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSAIRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSAIRMouseClicked
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSAIRMouseClicked

    private void jButtonSALVARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSALVARActionPerformed

        Connection connection;
        try {
            connection = ConnectionFactory.getConnection();
            CidadeDAO cidadeDAO = new CidadeDAO(connection);
            EstadoDAO EstadoDAO = new EstadoDAO(connection);

//insere no modelo Estado  na cidade/ puxa a cidade por id  para  o formulario.
            ModeloEstado estadoCombo = (ModeloEstado) jComboBoxEstado.getSelectedItem();
            modeloCidade.setCod_estado(estadoCombo.getId());

            modeloCidade.setNome(jTextFieldNomeCidade.getText().toUpperCase());
            if (validacao().isEmpty()) {
                if (cidadeDAO.varificaDuplicidadeAdicionar(modeloCidade.getNome(), modeloCidade.getCod_estado())) {
                    JOptionPane.showMessageDialog(rootPane, "ja existe esta cidade");
                } else {
                    cidadeDAO.adiciona(modeloCidade);
                    JOptionPane.showMessageDialog(rootPane, "Dados Inseridos Com Sucesso");
                    limpar();
                }

            } else {
                String message = validacao();

                JOptionPane.showMessageDialog(null, message, "Aviso", JOptionPane.INFORMATION_MESSAGE);

            }

            connection.close();

        } catch (SQLException ex) {
            
            JOptionPane.showMessageDialog(null, " Falha no Armazenamento de dados \n ERRO :" + ex);
        }


    }//GEN-LAST:event_jButtonSALVARActionPerformed

    private void jTableCIDADEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCIDADEMouseClicked
        String Id = "" + jTableCIDADE.getValueAt(jTableCIDADE.getSelectedRow(), 0);        // TODO add your handling code here:
        String Nome_Cidade = "" + jTableCIDADE.getValueAt(jTableCIDADE.getSelectedRow(), 1);
        String Estado = "" + jTableCIDADE.getValueAt(jTableCIDADE.getSelectedRow(), 2);

        ModeloCidades modeloCidade = new ModeloCidades();
        try {
            Connection connection = ConnectionFactory.getConnection();
            EstadoDAO estadoDao = new EstadoDAO(connection);
            CidadeDAO cidadeDAO = new CidadeDAO(connection);
            modeloCidade = cidadeDAO.buscaPorId(Long.parseLong(Id));

            jTextFieldCodigo.setText(Id);
            jTextFieldNomeCidade.setText(modeloCidade.getNome());

            for (int i = 0; i < jComboBoxEstado.getItemCount(); ++i) {
                ModeloEstado modeloEstado = (ModeloEstado) jComboBoxEstado.getItemAt(i);

                if (modeloCidade.getCod_estado().equals(modeloEstado.getId())) {

                    jComboBoxEstado.setSelectedIndex(i);
                    break;

                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableCIDADEMouseClicked

    private void jButtonSAIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSAIRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSAIRActionPerformed

    private void jButtonALTERARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonALTERARActionPerformed

        try {
            Connection connection = ConnectionFactory.getConnection();        // TODO add your handling code here:
            CidadeDAO CidadeDao = new CidadeDAO(connection);
            EstadoDAO EstadoDAO = new EstadoDAO(connection);
            if (validacao().isEmpty()) {
                modeloCidade.setCodig(Long.parseLong(jTextFieldCodigo.getText()));
                modeloCidade.setNome(jTextFieldNomeCidade.getText().toUpperCase());
                ModeloEstado estadoCombo = (ModeloEstado) jComboBoxEstado.getSelectedItem();
                modeloCidade.setCod_estado(estadoCombo.getId());
                if (!(jTextFieldCodigo.getText().isEmpty())) {
                    if (CidadeDao.varificaDuplicidadeAlterar(modeloCidade.getNome(), modeloCidade.getCod_estado(), modeloCidade.getCod_estado())) {
                        
                        JOptionPane.showMessageDialog(rootPane, "ja existe este Cidade");
                    } else {
                        CidadeDao.altera(modeloCidade);
                        JOptionPane.showMessageDialog(rootPane, "Dados Inseridos Com Sucesso");
                        limpar();
                    }
                } else {
                    String message = validacao();

                    JOptionPane.showMessageDialog(rootPane, "empty");

                }

            } else {
                String message = validacao();

                JOptionPane.showMessageDialog(null, message, "Aviso", JOptionPane.INFORMATION_MESSAGE);

            }

            connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonALTERARActionPerformed

    private void jButtonPESQUISARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPESQUISARActionPerformed
        try {
            CidadeDAO CidadeDAO = new CidadeDAO(ConnectionFactory.getConnection());
            jTableCIDADE.setModel(CidadeDAO.buscaLike(jTextFieldNomeCidade.getText().toUpperCase()));
            jTableCIDADE.setRowSorter(new TableRowSorter(CidadeDAO.buscaLike(jTextFieldNomeCidade.getText().toUpperCase())));
            jTableCIDADE.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTableCIDADE.getColumnModel().getColumn(0).setResizable(false);
            jTableCIDADE.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTableCIDADE.getColumnModel().getColumn(1).setResizable(false);
            jTableCIDADE.getColumnModel().getColumn(2).setPreferredWidth(40);
            jTableCIDADE.getColumnModel().getColumn(2).setResizable(false);
            jTableCIDADE.getTableHeader().setReorderingAllowed(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPESQUISARActionPerformed

    private void jButtonEXCLUIRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEXCLUIRActionPerformed
        try {
            Connection connection = ConnectionFactory.getConnection();
            CidadeDAO CidadeDAO = new CidadeDAO(connection);
            ModeloCidades modeloCidade = new ModeloCidades();
            modeloCidade.setCodig(Long.parseLong(jTextFieldCodigo.getText()));

            CidadeDAO.remove(modeloCidade);
            JOptionPane.showMessageDialog(rootPane, "Cidade excluido com Sucesso");

            PreencherTabela();//TODO add your handling code here:
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            JOptionPane.showConfirmDialog(rootPane, "Erro ao excluir os  Registro!!\n erro:" + ex);
        }        // TODO ad        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEXCLUIRActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        jTextFieldCodigo.setText("");
        jTextFieldNomeCidade.setText("");

    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jComboBoxEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEstadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmCidades().setVisible(true);
                } catch (SQLException ex) {
                    
                    Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonALTERAR;
    private javax.swing.JButton jButtonEXCLUIR;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPESQUISAR;
    private javax.swing.JButton jButtonSAIR;
    private javax.swing.JButton jButtonSALVAR;
    private javax.swing.JComboBox<Object> jComboBoxEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableCIDADE;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldNomeCidade;
    // End of variables declaration//GEN-END:variables
private String validacao() {
        String validar = "";

        int cont = 0;

        if (jTextFieldNomeCidade.getText().isEmpty()) {
            validar += "Cidade ";
            cont++;
        }

        if (cont != 0) {
            validar = "Campos obrigatorios: \n" + validar;
        }
        return validar;
    }

    public void limpar() {
        jTextFieldCodigo.setText("");
        jTextFieldNomeCidade.setText("");
    }
}
