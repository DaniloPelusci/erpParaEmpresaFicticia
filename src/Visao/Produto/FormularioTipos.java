/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.Produto;

import DAO.ConnectionFactory;
import DAO.produto.ModeloProdutoDAO;
import DAO.produto.NomenclaturaDAO;
import DAO.produto.TipoProdutoDAO;
import Modelo.Produto.ModeloModeloProduto;
import Modelo.Produto.ModeloNomenclatura;
import Modelo.Produto.ModeloTipoProduto;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author SERVIDOR
 */
public class FormularioTipos extends javax.swing.JFrame {

    int tipo;

    /**
     * Creates new form FormularioTipos
     */
    public FormularioTipos(int tipo) throws SQLException {

        initComponents();
        confirmarPressedEnter();
        //1= tipo 2=nomenclatura 3=modelo
        this.tipo = tipo;
        if(tipo == 1){
            jLabelTipos.setText("Tipo de produto");
            
        }else if(tipo == 2){
            jLabelTipos.setText("Capacidade");
        }else if(tipo == 3){
            jLabelTipos.setText("Modelo");
        }
        PreencherTabela(tipo);
        ativaDesativaCampos(false);
    }

    private FormularioTipos() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNOME = new javax.swing.JTextField();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonPesquisar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTIPO = new javax.swing.JTable();
        jLabelTipos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("E.B.O. Tipos");

        jLabel1.setText("ID");

        jTextFieldID.setEnabled(false);
        jTextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome");

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonAlterar.setText("Alterar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jTableTIPO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableTIPO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTIPOMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTIPO);

        jLabelTipos.setText("Tipos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldNOME, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabelTipos))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButtonNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSair)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelTipos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNOME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonAlterar)
                    .addComponent(jButtonPesquisar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonSair))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        ativaDesativaCampos(true);

        jTextFieldID.setText("");
        jTextFieldNOME.setText("");
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        try (Connection connection = ConnectionFactory.getConnection()) {
            if (!jTextFieldNOME.getText().isEmpty()) {
                if (tipo == 1) {
                    //tipo
                    TipoProdutoDAO tipoProdutoDAO = new TipoProdutoDAO(connection);
                    ModeloTipoProduto modeloTipoProduto = new ModeloTipoProduto();
                    modeloTipoProduto.setNome(jTextFieldNOME.getText().toUpperCase());

                    String idSalvar = jTextFieldID.getText();
                    if (idSalvar.equals("")) {
                        tipoProdutoDAO.adiciona(modeloTipoProduto);

                    } else {
                        modeloTipoProduto.setId(Long.parseLong(idSalvar));

                        tipoProdutoDAO.altera(modeloTipoProduto);

                    }
                } else if (tipo == 2) {
                    //nomenclatura
                    NomenclaturaDAO nomenclaturaDAO = new NomenclaturaDAO(connection);
                    ModeloNomenclatura modeloNomenclatura = new ModeloNomenclatura();
                    modeloNomenclatura.setNome(jTextFieldNOME.getText().toUpperCase());

                    String idSalvar = jTextFieldID.getText();
                    if (idSalvar.equals("")) {
                        nomenclaturaDAO.adiciona(modeloNomenclatura);

                    } else {
                        modeloNomenclatura.setId(Long.parseLong(idSalvar));

                        nomenclaturaDAO.altera(modeloNomenclatura);

                    }

                } else if (tipo == 3) {
                    //modelo
                    ModeloProdutoDAO modeloProdutoDAO = new ModeloProdutoDAO(connection);
                    ModeloModeloProduto modeloModeloProduto = new ModeloModeloProduto();
                    modeloModeloProduto.setNome(jTextFieldNOME.getText().toUpperCase());

                    String idSalvar = jTextFieldID.getText();
                    if (idSalvar.equals("")) {
                        modeloProdutoDAO.adiciona(modeloModeloProduto);

                    } else {
                        modeloModeloProduto.setId(Long.parseLong(idSalvar));

                        modeloProdutoDAO.altera(modeloModeloProduto);

                    }
                }

                PreencherTabela(tipo);
                JOptionPane.showMessageDialog(rootPane, "Dados Inseridos Com Sucesso");

                PreencherTabela(tipo);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, " Falha no Armazenamento de dados \n ERRO :" + ex);
        }
        jTextFieldID.setText("");
        jTextFieldNOME.setText("");
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        ativaDesativaCampos(true);
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        try (Connection connection = ConnectionFactory.getConnection()) {
            if (tipo == 1) {
                //tipo
                TipoProdutoDAO tipoProdutoDAO = new TipoProdutoDAO(connection);

                jTableTIPO.setModel(tipoProdutoDAO.buscaLike(jTextFieldNOME.getText().toUpperCase()));
            } else if (tipo == 2) {
                //nomenclatura
                NomenclaturaDAO nomenclaturaDAO = new NomenclaturaDAO(connection);
                jTableTIPO.setModel(nomenclaturaDAO.buscaLike(jTextFieldNOME.getText().toUpperCase()));
            } else if (tipo == 3) {
                ModeloProdutoDAO modeloProdutoDAO = new ModeloProdutoDAO(connection);
                jTableTIPO.setModel(modeloProdutoDAO.buscaLike(jTextFieldNOME.getText().toUpperCase()));
            }

            jTableTIPO.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableTIPO.getColumnModel().getColumn(0).setResizable(false);
            jTableTIPO.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableTIPO.getColumnModel().getColumn(1).setResizable(false);

            jTableTIPO.getTableHeader().setReorderingAllowed(false);
            connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(FormularioTipos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        try {
            Connection connection = ConnectionFactory.getConnection();
            if (tipo == 1) {
                //tipo
                TipoProdutoDAO tipoProdutoDAO = new TipoProdutoDAO(connection);
                ModeloTipoProduto modeloTipoProduto = new ModeloTipoProduto();
                modeloTipoProduto.setId(Long.parseLong(jTextFieldID.getText()));

                tipoProdutoDAO.remove(modeloTipoProduto);
            } else if (tipo == 2) {
                //nomenclatura
                NomenclaturaDAO nomenclaturaDAO = new NomenclaturaDAO(connection);
                ModeloNomenclatura modeloNomenclatura = new ModeloNomenclatura();
                modeloNomenclatura.setId(Long.parseLong(jTextFieldID.getText()));

                nomenclaturaDAO.remove(modeloNomenclatura);

            } else if (tipo == 3) {
                //modelo
                ModeloProdutoDAO modeloProdutoDAO = new ModeloProdutoDAO(connection);
                ModeloModeloProduto modeloModeloProduto = new ModeloModeloProduto();
                modeloModeloProduto.setId(Long.parseLong(jTextFieldID.getText()));
                modeloProdutoDAO.remove(modeloModeloProduto);

            }

            JOptionPane.showMessageDialog(rootPane, "Cliente excluido com Sucesso");

            PreencherTabela(tipo);//TODO add your handling code here:
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            JOptionPane.showConfirmDialog(rootPane, "Erro ao excluir os  Registro!!\n erro:" + ex);
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTableTIPOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTIPOMouseClicked
        String Id = "" + jTableTIPO.getValueAt(jTableTIPO.getSelectedRow(), 0);
        String Nome = "" + jTableTIPO.getValueAt(jTableTIPO.getSelectedRow(), 1);

        jTextFieldID.setText(Id);

        jTextFieldNOME.setText(Nome);

        // TODO add your handling code here:
    }//GEN-LAST:event_jTableTIPOMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioTipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioTipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioTipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioTipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioTipos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelTipos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTIPO;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldNOME;
    // End of variables declaration//GEN-END:variables

    public void ativaDesativaCampos(boolean status) {
        if (status == false) {
            jTextFieldNOME.setEnabled(false);

        } else if (status == true) {
            jTextFieldNOME.setEnabled(true);

        }

    }

    private void PreencherTabela(int tipo) throws SQLException {

        try (Connection connection = ConnectionFactory.getConnection()) {
            if (tipo == 1) {
                //tipo
                TipoProdutoDAO tipoProdutoDAO = new TipoProdutoDAO(connection);

                jTableTIPO.setModel(tipoProdutoDAO.listaTabela());
            } else if (tipo == 2) {
                //nomenclatura
                NomenclaturaDAO nomenclaturaDAO = new NomenclaturaDAO(connection);
                jTableTIPO.setModel(nomenclaturaDAO.listaTabela());
            } else if (tipo == 3) {
                ModeloProdutoDAO modeloProdutoDAO = new ModeloProdutoDAO(connection);
                jTableTIPO.setModel(modeloProdutoDAO.listaTabela());
            }

            jTableTIPO.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableTIPO.getColumnModel().getColumn(0).setResizable(false);
            jTableTIPO.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableTIPO.getColumnModel().getColumn(1).setResizable(false);

            jTableTIPO.getTableHeader().setReorderingAllowed(false);
            connection.close();
        }
    }

    public void confirmarPressedEnter() {
        InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "forward");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("forward", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {

                jButtonSalvar.doClick();
            }
        });

    }
}
