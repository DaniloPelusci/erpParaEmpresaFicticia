/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.controle.controleNotasCobradorMotoristas;

import Controle.ModeloTabela;
import DAO.ConnectionFactory;
import DAO.TipoAcaoDAO;
import DAO.cliente.ClienteDAO;
import DAO.funcionario.FuncionarioDAO;
import DAO.venda.VendaDAO;
import Modelo.Controle.ModeloControle;
import Modelo.Funcionario.ModeloFuncionario;
import NovoClass.ControleDAO;
import Visao.pedido.Pedido;
import Visao.venda.Venda;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author usuario
 */
public class ControleVenda extends javax.swing.JFrame {

    private List<ModeloControle> modeloControles = new ArrayList<>();

    /**
     * Creates new form controle
     */
    public ControleVenda() {
        initComponents();
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Calendar horaAtual = Calendar.getInstance();
        String dataFormatada = sdf.format(horaAtual.getTime());
        jFormattedTextFieldDATA.setText(dataFormatada);

        buscarPressedEnter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButtonFuncionario = new javax.swing.JButton();
        jTextFieldIDFuncionario = new javax.swing.JTextField();
        jTextFieldNomeFuncionario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableProduto = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jFormattedTextFieldDATA = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel4.setText("Funcionario");

        jButtonFuncionario.setText("+");
        jButtonFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFuncionarioActionPerformed(evt);
            }
        });

        jTextFieldIDFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIDFuncionarioFocusLost(evt);
            }
        });

        jTextFieldNomeFuncionario.setEnabled(false);

        jLabel7.setText("ID Funcionario");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("ID Venda"));

        jTableProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableProduto.setFocusable(false);
        jScrollPane3.setViewportView(jTableProduto);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 971, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
        );

        jLabel9.setText("Nome");

        jLabel1.setText("ID Venda");

        jButton1.setText("Adicionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salvar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        try {
            jFormattedTextFieldDATA.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldDATA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldDATAActionPerformed(evt);
            }
        });

        jLabel2.setText("Data Retirada");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonFuncionario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addGap(19, 19, 19)
                                .addComponent(jTextFieldIDFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jFormattedTextFieldDATA, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonFuncionario)
                                .addComponent(jLabel7))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextFieldDATA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldIDFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(89, 89, 89)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFuncionarioActionPerformed
        new PesquisaFuncionario(null, true, this).setVisible(true);
    }//GEN-LAST:event_jButtonFuncionarioActionPerformed

    private void jTextFieldIDFuncionarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIDFuncionarioFocusLost
        if (jTextFieldIDFuncionario.getText().isEmpty() || !logica.LogicasPedido.isInt(jTextFieldIDFuncionario.getText())) {
        } else {
            try {

                Connection connection = ConnectionFactory.getConnection();
                FuncionarioDAO funcionarioDAO = new FuncionarioDAO(connection);
                if (funcionarioDAO.verificacao(Long.parseLong(jTextFieldIDFuncionario.getText()))) {

                    ModeloFuncionario modeloFuncionario = new ModeloFuncionario();
                    modeloFuncionario = funcionarioDAO.buscaPorId(Long.parseLong(jTextFieldIDFuncionario.getText()));
                    jTextFieldNomeFuncionario.setText(modeloFuncionario.getNome());
                } else {
                    JOptionPane.showMessageDialog(null, "ID do Funcionario invalido");

                }
                connection.close();
            } catch (SQLException ex) {
                Logger.getLogger(Venda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTextFieldIDFuncionarioFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Connection connection;
        try {

            connection = ConnectionFactory.getConnection();

            FuncionarioDAO funcionarioDAO = new FuncionarioDAO(connection);
            VendaDAO vendaDAO = new VendaDAO(connection);
            ControleDAO controleDAO = new ControleDAO(connection);
            if (!jTextField1.getText().trim().equals(null) || !jTextFieldIDFuncionario.getText().trim().equals(null)) {
                if (funcionarioDAO.verificacao(Long.parseLong(jTextFieldIDFuncionario.getText()))) {
                    if (vendaDAO.verificar(Long.parseLong(jTextField1.getText()))) {

                        ModeloControle modeloControle = new ModeloControle();
                        modeloControle.setIdFuncionario(Long.parseLong(jTextFieldIDFuncionario.getText()));
                        modeloControle.setIdVenda(Long.parseLong(jTextField1.getText()));
                        String stringDataSalvar = jFormattedTextFieldDATA.getText();
                        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                        Date dataSalvar;
                        try {

                            dataSalvar = new Date(format.parse(stringDataSalvar).getTime());
                            modeloControle.setDataRetirada(dataSalvar);

                        } catch (ParseException ex) {
                            Logger.getLogger(Pedido.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        if (!controleDAO.verificar(modeloControle)) {
                            if (!verificararray(modeloControle)) {
                                modeloControles.add(modeloControle);

                                limpaCampos();
                            }
                        }

                        atualizatabela();
                    }
                }
            }
            connection.close();
        } catch (SQLException ex) {
            Logger.getLogger(ControleVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Connection connection;

        try {
            connection = ConnectionFactory.getConnection();

            ControleDAO controleDAO = new ControleDAO(connection);
            for (ModeloControle mc : modeloControles) {

                controleDAO.adiciona(mc);

            }
            connection.close();
        } catch (SQLException ex) {
            Logger.getLogger(ControleVenda.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(ControleVenda.class.getName()).log(Level.SEVERE, null, ex);
        }
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFormattedTextFieldDATAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldDATAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldDATAActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControleVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControleVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControleVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControleVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControleVenda().setVisible(true);
            }
        });
    }

    public void setRetornoConsultaFuncionario(String id, String nome) {
        this.jTextFieldNomeFuncionario.setText(String.valueOf(nome));
        this.jTextFieldIDFuncionario.setText(String.valueOf(id));

    }

    public void buscarPressedEnter() {
        InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "forward");
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("forward", new AbstractAction() {
            private static final long serialVersionUID = 1L;

            @Override
            public void actionPerformed(ActionEvent arg0) {

                jButton1.doClick();
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonFuncionario;
    private javax.swing.JFormattedTextField jFormattedTextFieldDATA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableProduto;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldIDFuncionario;
    private javax.swing.JTextField jTextFieldNomeFuncionario;
    // End of variables declaration//GEN-END:variables

    private void atualizatabela() throws SQLException {

        String[] colunas = new String[]{"ID Funcionario", "ID Venda","Data de Retirada"};
        ArrayList dados = new ArrayList();
        Connection connection = new ConnectionFactory().getConnection();
        ClienteDAO clienteDAO = new ClienteDAO(connection);
        TipoAcaoDAO tipoAcaoDAO = new TipoAcaoDAO(connection);
        Collections.reverse(modeloControles);
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        for (ModeloControle mp : modeloControles) {
            
            dados.add(new Object[]{mp.getIdFuncionario(), mp.getIdVenda(),format.format(mp.getDataRetirada().getTime())});
        }
        ModeloTabela modelo = new ModeloTabela(dados, colunas);
        jTableProduto.setModel(modelo);
        jTableProduto.setRowSorter(new TableRowSorter(modelo));
        jTableProduto.getColumnModel().getColumn(0).setPreferredWidth(2);
        jTableProduto.getColumnModel().getColumn(0).setResizable(false);
        jTableProduto.getColumnModel().getColumn(1).setPreferredWidth(20);
        jTableProduto.getColumnModel().getColumn(1).setResizable(false);
        jTableProduto.getColumnModel().getColumn(1).setPreferredWidth(20);
        jTableProduto.getColumnModel().getColumn(1).setResizable(false);
    }

    private void limpaCampos() {

        jTextField1.setText("");

    }

    private boolean verificararray(ModeloControle modeloControle) {
        boolean resultado = false;
        for (ModeloControle mc : modeloControles) {

            if (modeloControle.getIdFuncionario().equals(mc.getIdFuncionario())) {
                if (modeloControle.getIdVenda().equals(mc.getIdVenda())) {

                    resultado = true;
                    System.err.println(resultado);
                }
            }
        }
        return resultado;

    }

}
