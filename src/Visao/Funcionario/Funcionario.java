/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.Funcionario;

import DAO.BairroDAO;
import DAO.CidadeDAO;
import DAO.ConnectionFactory;
import DAO.EstadoDAO;
import DAO.funcionario.CargoDAO;
import DAO.funcionario.FuncionarioDAO;
import Modelo.Funcionario.ModeloCargo;
import Modelo.Funcionario.ModeloFuncionario;
import Modelo.ModeloBairro;
import Modelo.ModeloCidades;
import Modelo.ModeloEmpresa;
import Modelo.ModeloEstado;
import Visao.Endereco.FrmCidades;
import Visao.Fornecedor.Fornecedor;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;
import logica.ValidaCPF;

/**
 *
 * @author SERVIDOR
 */
public class Funcionario extends javax.swing.JFrame {

    /**
     * Creates new form Funcionario
     */
    public Funcionario() throws SQLException {
        initComponents();

        ativaDesativaCampos(false);
        desativaLableValidation();
        if (jComboBoxEstado.getItemCount() <= 0) {
            try {
                Connection connection = new ConnectionFactory().getConnection();
                EstadoDAO EstadoDao = new EstadoDAO(connection);
                ModeloEstado modeloEstado = new ModeloEstado();
                List<ModeloEstado> estado = EstadoDao.lista();
                for (ModeloEstado e : estado) {
                    jComboBoxEstado.addItem(e);
                }
                ModeloCargo modeloCargo = new ModeloCargo();
                CargoDAO cargoDAO = new CargoDAO(connection);
                List<ModeloCargo> cargos = cargoDAO.lista();
                for (ModeloCargo t : cargos) {
                    jComboramoCargo.addItem(t);
                }
                connection.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
                Logger.getLogger(Funcionario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldRG = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldEndereco = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldCarteiradeTRABALHO = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldSalario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOBSERVAÇAO = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jComboBoxEstado = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboramoCargo = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxCidade = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxBairro = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonSalvar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jButtonPesquisar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableFuncionario = new javax.swing.JTable();
        jTextFieldDataAdmissao = new javax.swing.JFormattedTextField();
        jTextFieldDataDemissao = new javax.swing.JFormattedTextField();
        jTextFieldDataNascimento = new javax.swing.JFormattedTextField();
        validacaoNome = new javax.swing.JLabel();
        validacaoEndereco = new javax.swing.JLabel();
        validacaoCPF = new javax.swing.JLabel();
        validacaoRG = new javax.swing.JLabel();
        validacaoCarteiraTrabalho = new javax.swing.JLabel();
        validacaoDataNascimento = new javax.swing.JLabel();
        validacaoDataAdmissao = new javax.swing.JLabel();
        validacaoTelefone = new javax.swing.JLabel();
        jTextFieldCPF = new javax.swing.JFormattedTextField();
        jButtonGerarRelatorio = new javax.swing.JButton();
        jTextFieldTelefone = new javax.swing.JFormattedTextField();
        jTextFieldCelular = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("E.B.O. Cadastro de Funcionario ");

        jLabel3.setText("Codigo");

        jTextFieldID.setEnabled(false);

        jLabel8.setText("RG");

        jLabel9.setText("CPF");

        jLabel10.setText("Nome");

        jLabel7.setText("Endereço");

        jLabel6.setText("Data de Nascimento");

        jLabel13.setText("Telefone");

        jLabel14.setText("Celular");

        jLabel15.setText("Numero da C.T");

        jLabel20.setText("Demissão");

        jLabel18.setText("SALARIO");

        jLabel19.setText("Data da Admissao");

        jTextFieldSalario.setText("0");

        jTextAreaOBSERVAÇAO.setColumns(20);
        jTextAreaOBSERVAÇAO.setRows(5);
        jScrollPane1.setViewportView(jTextAreaOBSERVAÇAO);

        jLabel16.setText("Estado");

        jComboBoxEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxEstadoItemStateChanged(evt);
            }
        });

        jLabel4.setText("Cargo");

        jLabel12.setText("Cidade");

        jComboBoxCidade.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxCidadeItemStateChanged(evt);
            }
        });

        jLabel11.setText("Bairro");

        jLabel1.setText("Observação");

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonAlterar.setText("Alterar");
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jTableFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFuncionarioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableFuncionario);

        try {
            jTextFieldDataAdmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jTextFieldDataDemissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            jTextFieldDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        validacaoNome.setForeground(new java.awt.Color(255, 0, 0));
        validacaoNome.setText("*");

        validacaoEndereco.setForeground(new java.awt.Color(255, 0, 0));
        validacaoEndereco.setText("*");

        validacaoCPF.setForeground(new java.awt.Color(255, 0, 0));
        validacaoCPF.setText("*");

        validacaoRG.setForeground(new java.awt.Color(255, 0, 0));
        validacaoRG.setText("*");

        validacaoCarteiraTrabalho.setForeground(new java.awt.Color(255, 0, 0));
        validacaoCarteiraTrabalho.setText("*");

        validacaoDataNascimento.setForeground(new java.awt.Color(255, 0, 0));
        validacaoDataNascimento.setText("*");

        validacaoDataAdmissao.setForeground(new java.awt.Color(255, 0, 0));
        validacaoDataAdmissao.setText("*");

        validacaoTelefone.setForeground(new java.awt.Color(255, 0, 0));
        validacaoTelefone.setText("*");

        try {
            jTextFieldCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jButtonGerarRelatorio.setText("Gerar Relatorio de Vales");
        jButtonGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarRelatorioActionPerformed(evt);
            }
        });

        try {
            jTextFieldTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextFieldTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelefoneActionPerformed(evt);
            }
        });

        try {
            jTextFieldCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTextFieldCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCelularActionPerformed(evt);
            }
        });

        jButton1.setText("Criar Usuario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(validacaoNome, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(validacaoCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(validacaoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNome)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(validacaoRG, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldRG, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel15))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addGap(7, 7, 7)
                                                .addComponent(validacaoDataAdmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextFieldDataAdmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(25, 25, 25)
                                                .addComponent(jLabel20)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextFieldDataDemissao, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(validacaoCarteiraTrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jTextFieldCarteiradeTRABALHO, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(4, 4, 4)
                                                .addComponent(validacaoDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(6, 6, 6)
                                                .addComponent(jTextFieldDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jComboramoCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldCelular, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                                        .addGap(639, 639, 639))))
                            .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(34, 34, 34))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(10, 10, 10)
                                        .addComponent(validacaoTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldTelefone)
                                    .addComponent(jTextFieldSalario, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSair)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonGerarRelatorio, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(10, 10, 10)
                                .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(jLabel11)
                                .addGap(24, 24, 24)
                                .addComponent(jComboBoxBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel3)
                    .addGap(8, 8, 8)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(964, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonGerarRelatorio)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(validacaoNome))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validacaoEndereco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jComboBoxCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jTextFieldRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(jTextFieldCarteiradeTRABALHO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validacaoCPF)
                    .addComponent(validacaoRG)
                    .addComponent(validacaoCarteiraTrabalho)
                    .addComponent(validacaoDataNascimento)
                    .addComponent(jTextFieldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jTextFieldDataAdmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validacaoDataAdmissao)
                    .addComponent(jLabel20)
                    .addComponent(jTextFieldDataDemissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jComboramoCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(validacaoTelefone)
                    .addComponent(jTextFieldTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonAlterar)
                    .addComponent(jButtonPesquisar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonSair)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(564, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxEstadoItemStateChanged
        Connection connection = null;
        try {
            connection = new ConnectionFactory().getConnection();

            CidadeDAO cidadeDAO = new CidadeDAO(connection);
            ModeloEstado estadoCombo = (ModeloEstado) jComboBoxEstado.getSelectedItem();
            List<ModeloCidades> cidadeCombo = cidadeDAO.buscaIdPorEstado(estadoCombo.getId());
            jComboBoxCidade.removeAllItems();
            for (ModeloCidades c : cidadeCombo) {
                jComboBoxCidade.addItem(c);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Funcionario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jComboBoxEstadoItemStateChanged

    private void jComboBoxCidadeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxCidadeItemStateChanged
        Connection connection = null;
        List<ModeloBairro> bairroCombo = null;
        try {
            connection = new ConnectionFactory().getConnection();
       
        BairroDAO bairroDAO = new BairroDAO(connection);
        ModeloCidades cidadeCombo2 = (ModeloCidades) jComboBoxCidade.getSelectedItem();
        if (cidadeCombo2 != null) {
            bairroCombo = bairroDAO.buscaIdPorCidade(cidadeCombo2.getCodig());
        }
        jComboBoxBairro.removeAllItems();
        if (bairroCombo != null) {
            for (ModeloBairro b : bairroCombo) {
                jComboBoxBairro.addItem(b);
            }
        }
        connection.close();
         } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Funcionario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBoxCidadeItemStateChanged

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        ativaDesativaCampos(true);
        jTextFieldCPF.setText("");
        jTextFieldRG.setText("");
        jTextFieldTelefone.setText("");
        jTextFieldEndereco.setText("");
        jTextFieldNome.setText("");
        jTextFieldDataDemissao.setText("");
        jTextFieldDataDemissao.setText("");
        jTextFieldCarteiradeTRABALHO.setText("");
        jTextFieldCelular.setText("");
        jTextAreaOBSERVAÇAO.setText("");

    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        try (Connection connection = ConnectionFactory.getConnection()) {
            FuncionarioDAO funcionariodao = new FuncionarioDAO(connection);// TODO add your handling code here   gta mor 98634.7205 //:
            CidadeDAO cidadedao = new CidadeDAO(connection);
            CargoDAO cargodao = new CargoDAO(connection);
            ModeloFuncionario modelofuncionario = new ModeloFuncionario();
            ModeloCargo modelocargo = new ModeloCargo();
            ModeloEmpresa ModeloEmpresa = new ModeloEmpresa();
            ModeloCidades modelocidades = new ModeloCidades();
            ModeloBairro modelobairro = new ModeloBairro();
            EstadoDAO estadodao = new EstadoDAO(connection);
            BairroDAO bairrodao = new BairroDAO(connection);
            ModeloEstado modeloestado = new ModeloEstado();
            if (validacao().isEmpty()) {
                ModeloBairro bairroCombo = (ModeloBairro) jComboBoxBairro.getSelectedItem();
                modelofuncionario.setBairro(bairroCombo.getCodBairro());
                ModeloCidades cidadeCombo = (ModeloCidades) jComboBoxCidade.getSelectedItem();
                modelofuncionario.setCidade(cidadeCombo.getCodig());
                ModeloEstado estadoCombo = (ModeloEstado) jComboBoxEstado.getSelectedItem();
                modelofuncionario.setEstado(estadoCombo.getId());
                ModeloCargo cargoCombo = (ModeloCargo) jComboramoCargo.getSelectedItem();
                modelofuncionario.setCargo(cargoCombo.getId());
                modelofuncionario.setNome(jTextFieldNome.getText().toUpperCase());
                modelofuncionario.setRg(jTextFieldRG.getText().toUpperCase());
                modelofuncionario.setCpf(jTextFieldCPF.getText().toUpperCase());
                modelofuncionario.setEndereco(jTextFieldEndereco.getText().toUpperCase());
                modelofuncionario.setCarteiraTrabalho(jTextFieldCarteiradeTRABALHO.getText().toUpperCase());
                BigDecimal b = new BigDecimal(jTextFieldSalario.getText());
                modelofuncionario.setSalario(b);
                modelofuncionario.setObservacao(jTextAreaOBSERVAÇAO.getText().toUpperCase());
                modelofuncionario.setTelefone(jTextFieldTelefone.getText());
                String stringDataSalvarNascimento = jTextFieldDataNascimento.getText();
                SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                Date dataSalvar = new Date(format.parse(stringDataSalvarNascimento).getTime());
                modelofuncionario.setDataNascimento(dataSalvar);
                String stringDataSalvarAdmissao = jTextFieldDataAdmissao.getText();
                Date dataSalvarAdmissao = new Date(format.parse(stringDataSalvarNascimento).getTime());
                modelofuncionario.setDataNascimento(dataSalvar);
                String stringDataSalvarDemissao = jTextFieldDataDemissao.getText();
                Date dataSalvarDemissao = new Date(format.parse(stringDataSalvarNascimento).getTime());
                modelofuncionario.setDataNascimento(dataSalvar);
                String idSalvar = jTextFieldID.getText();
                if (idSalvar.equals("")) {
                    funcionariodao.adiciona(modelofuncionario);
                    limparcampos();
                } else {
                    modelofuncionario.setId(Long.parseLong(idSalvar));
                    funcionariodao.altera(modelofuncionario);
                    limparcampos();
                }
            } else {
                String message = validacao();
                JOptionPane.showMessageDialog(null, message, "Aviso", JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            JOptionPane.showMessageDialog(null, " Falha no Armazenamento de dados \n ERRO :" + ex);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Funcionario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        ativaDesativaCampos(true);
    }//GEN-LAST:event_jButtonAlterarActionPerformed
    public void limparcampos() {
        jTextFieldSalario.setText("");
        jTextFieldDataDemissao.setText("");
        jTextFieldDataAdmissao.setText("");
        jTextFieldDataNascimento.setText("");
        jTextFieldID.setText("");
        jTextFieldCPF.setText("");
        jTextFieldRG.setText("");
        jTextFieldTelefone.setText("");
        jTextFieldEndereco.setText("");
        jTextFieldNome.setText("");
        jTextFieldDataDemissao.setText("");
        jTextFieldDataDemissao.setText("");
        jTextFieldCarteiradeTRABALHO.setText("");
        jTextFieldCelular.setText("");
        jTextAreaOBSERVAÇAO.setText("");
    }


    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        try {
            FuncionarioDAO funcionarioDAO = new FuncionarioDAO(ConnectionFactory.getConnection());
            jTableFuncionario.setRowSorter(new TableRowSorter(funcionarioDAO.buscaLike(jTextFieldNome.getText().toUpperCase())));
            jTableFuncionario.setModel(funcionarioDAO.buscaLike(jTextFieldNome.getText().toUpperCase()));
            jTableFuncionario.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTableFuncionario.getColumnModel().getColumn(0).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(1).setPreferredWidth(5);
            jTableFuncionario.getColumnModel().getColumn(1).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(2).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(3).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(4).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(5).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(6).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(6).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(7).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(7).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(8).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(8).setResizable(false);
            jTableFuncionario.getTableHeader().setReorderingAllowed(false);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Fornecedor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        try {
            if (logica.LogicasPedido.joptionSenha()) {

                {
                    try {
                        Connection connection = ConnectionFactory.getConnection();
                        FuncionarioDAO funcionarioDAO = new FuncionarioDAO(connection);
                        ModeloFuncionario modeloFuncionario = new ModeloFuncionario();
                        modeloFuncionario.setId(Long.parseLong(jTextFieldID.getText()));
                        funcionarioDAO.remove(modeloFuncionario);
                        JOptionPane.showMessageDialog(rootPane, "Fornecedor excluido com Sucesso");
                        preencherTabela();//TODO add your handling code here:
                        connection.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex);
                        JOptionPane.showConfirmDialog(rootPane, "Erro ao excluir os  Registro!!\n erro:" + ex);
                    }

                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Senha Invalida");

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Funcionario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTableFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFuncionarioMouseClicked
        ativaDesativaCampos(false);
        String Id = "" + jTableFuncionario.getValueAt(jTableFuncionario.getSelectedRow(), 0);
        ModeloCargo modeloCargoTabela = new ModeloCargo();
        ModeloEstado modeloEstadoTabela = new ModeloEstado();
        ModeloBairro modelobairroTabela = new ModeloBairro();
        ModeloCidades modelocidadeTabela = new ModeloCidades();
        ModeloFuncionario modeloFuncionarioTabela = new ModeloFuncionario();
        try {
            Connection Connection = new ConnectionFactory().getConnection();
            CidadeDAO cidadeDAO = new CidadeDAO(Connection);
            EstadoDAO estadoDAO = new EstadoDAO(Connection);
            BairroDAO bairroDAO = new BairroDAO(Connection);
            FuncionarioDAO funcionarioDAO = new FuncionarioDAO(Connection);
            CargoDAO cargoDAO = new CargoDAO(Connection);
            modeloFuncionarioTabela = funcionarioDAO.buscaPorId(Long.parseLong(Id));
            modeloEstadoTabela = estadoDAO.buscaPorId(modeloFuncionarioTabela.getEstado());
            modelocidadeTabela = cidadeDAO.buscaPorId(modeloFuncionarioTabela.getCidade());
            modelobairroTabela = bairroDAO.buscaPorId(modeloFuncionarioTabela.getBairro());
            modeloCargoTabela = cargoDAO.buscaPorId(modeloFuncionarioTabela.getCargo());
            for (int i = 0; i < jComboBoxEstado.getItemCount(); ++i) {
                ModeloEstado modeloEstadoTabela2 = (ModeloEstado) jComboBoxEstado.getItemAt(i);
                if (modeloEstadoTabela.getId().equals(modeloEstadoTabela2.getId())) {
                    jComboBoxEstado.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 0; i < jComboBoxCidade.getItemCount(); ++i) {
                ModeloCidades modeloCidades2 = (ModeloCidades) jComboBoxCidade.getItemAt(i);

                if (modelocidadeTabela.getCodig().equals(modeloCidades2.getCodig())) {
                    jComboBoxCidade.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 0; i < jComboBoxBairro.getItemCount(); ++i) {
                ModeloBairro modeloBairro2 = (ModeloBairro) jComboBoxBairro.getItemAt(i);
                if (modelobairroTabela.getCodBairro().equals(modeloBairro2.getCodBairro())) {
                    jComboBoxBairro.setSelectedIndex(i);
                    break;
                }
            }
            for (int i = 0; i < jComboramoCargo.getItemCount(); ++i) {
                ModeloCargo modeloCargo2 = (ModeloCargo) jComboramoCargo.getItemAt(i);
                if (modeloCargoTabela.getId().equals(modeloCargo2.getId())) {
                    jComboramoCargo.setSelectedIndex(i);
                    break;
                }
            }
            jTextFieldID.setText(Id);
            jTextFieldRG.setText(modeloFuncionarioTabela.getRg());
            jTextFieldCPF.setText(modeloFuncionarioTabela.getCpf());
            jTextFieldCarteiradeTRABALHO.setText(modeloFuncionarioTabela.getCarteiraTrabalho());
            jTextFieldSalario.setText(String.valueOf(modeloFuncionarioTabela.getSalario()));
            jTextFieldNome.setText(modeloFuncionarioTabela.getNome());
            jTextFieldEndereco.setText(modeloFuncionarioTabela.getEndereco());
            jTextFieldCelular.setText(modeloFuncionarioTabela.getCelular());
            jTextAreaOBSERVAÇAO.setText(modeloFuncionarioTabela.getObservacao());
            if (modeloFuncionarioTabela.getDataAdmissao() != null) {
                jTextFieldDataAdmissao.setText(datas(String.valueOf(modeloFuncionarioTabela.getDataAdmissao())));
            }
            if (modeloFuncionarioTabela.getDataNascimento() != null) {
                jTextFieldDataNascimento.setText(datas(String.valueOf(modeloFuncionarioTabela.getDataNascimento())));
            }
            if (modeloFuncionarioTabela.getDataDemissao() != null) {
                jTextFieldDataDemissao.setText(datas(String.valueOf(modeloFuncionarioTabela.getDataDemissao())));
            }
            Connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(FrmCidades.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTableFuncionarioMouseClicked

    private void jButtonGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarRelatorioActionPerformed
        try {
            if (!jTextFieldID.getText().isEmpty()) {
                if (logica.LogicasPedido.joptionSenha()) {
                    new Visao.Funcionario.GerarRelatorio1(Long.parseLong(jTextFieldID.getText())).setVisible(true);

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Senha Invalida");

                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Selecione um Funcionario");

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Funcionario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonGerarRelatorioActionPerformed

    private void jTextFieldTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelefoneActionPerformed

    private void jTextFieldCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCelularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCelularActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if (jTextFieldID.getText().isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Escolha um funcionario");
            } else {
                if (logica.LogicasPedido.joptionSenha()) {
                    Connection Connection = new ConnectionFactory().getConnection();
                    FuncionarioDAO funcionarioDAO = new FuncionarioDAO(Connection);

                    new Usuario(funcionarioDAO.buscaPorId(Long.parseLong(jTextFieldID.getText()))).setVisible(true);

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Senha Invalida");

                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Funcionario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Funcionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Funcionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Funcionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Funcionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Funcionario().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Funcionario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonGerarRelatorio;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<Object> jComboBoxBairro;
    private javax.swing.JComboBox<Object> jComboBoxCidade;
    private javax.swing.JComboBox<Object> jComboBoxEstado;
    private javax.swing.JComboBox<Object> jComboramoCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableFuncionario;
    private javax.swing.JTextArea jTextAreaOBSERVAÇAO;
    private javax.swing.JFormattedTextField jTextFieldCPF;
    private javax.swing.JTextField jTextFieldCarteiradeTRABALHO;
    private javax.swing.JFormattedTextField jTextFieldCelular;
    private javax.swing.JFormattedTextField jTextFieldDataAdmissao;
    private javax.swing.JFormattedTextField jTextFieldDataDemissao;
    private javax.swing.JFormattedTextField jTextFieldDataNascimento;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldRG;
    private javax.swing.JTextField jTextFieldSalario;
    private javax.swing.JFormattedTextField jTextFieldTelefone;
    private javax.swing.JLabel validacaoCPF;
    private javax.swing.JLabel validacaoCarteiraTrabalho;
    private javax.swing.JLabel validacaoDataAdmissao;
    private javax.swing.JLabel validacaoDataNascimento;
    private javax.swing.JLabel validacaoEndereco;
    private javax.swing.JLabel validacaoNome;
    private javax.swing.JLabel validacaoRG;
    private javax.swing.JLabel validacaoTelefone;
    // End of variables declaration//GEN-END:variables

    public void ativaDesativaCampos(boolean status) {
        if (status == false) {

            jTextFieldCPF.setEnabled(false);
            jTextFieldRG.setEnabled(false);
            jTextFieldTelefone.setEnabled(false);
            jTextFieldEndereco.setEnabled(false);
            jTextFieldNome.setEnabled(false);
            jTextFieldDataDemissao.setEnabled(false);
            jTextFieldDataDemissao.setEnabled(false);
            jComboBoxEstado.setEnabled(false);
            jComboBoxCidade.setEnabled(false);
            jComboBoxBairro.setEnabled(false);
            jTextFieldCarteiradeTRABALHO.setEnabled(false);
            jTextFieldCelular.setEnabled(false);
            jTextAreaOBSERVAÇAO.setEnabled(false);
            jTextFieldSalario.setEnabled(false);
            jTextFieldDataAdmissao.setEnabled(false);
            jTextFieldDataNascimento.setEnabled(false);
            jComboramoCargo.setEnabled(false);

        } else if (status == true) {
            jComboramoCargo.setEnabled(true);
            jTextFieldCPF.setEnabled(true);
            jTextFieldRG.setEnabled(true);
            jTextFieldTelefone.setEnabled(true);
            jTextFieldEndereco.setEnabled(true);
            jTextFieldNome.setEnabled(true);
            jTextFieldDataDemissao.setEnabled(true);
            jTextFieldDataDemissao.setEnabled(true);
            jComboBoxEstado.setEnabled(true);
            jComboBoxCidade.setEnabled(true);
            jComboBoxBairro.setEnabled(true);
            jTextFieldCarteiradeTRABALHO.setEnabled(true);
            jTextFieldCelular.setEnabled(true);
            jTextAreaOBSERVAÇAO.setEnabled(true);
            jTextFieldSalario.setEnabled(true);
            jTextFieldDataAdmissao.setEnabled(true);
            jTextFieldDataNascimento.setEnabled(true);

        }

    }

    public void preencherTabela() throws SQLException {// preenchimento da tabela  ,  linhas e colunas , LuizDOURADO
        try (Connection connection = ConnectionFactory.getConnection()) {
            FuncionarioDAO funcionarioDAO = new FuncionarioDAO(connection);
            jTableFuncionario.setModel(funcionarioDAO.listaTabela());
            jTableFuncionario.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableFuncionario.getColumnModel().getColumn(0).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(1).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(2).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(3).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(3).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(4).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(5).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(6).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(6).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(7).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(7).setResizable(false);
            jTableFuncionario.getColumnModel().getColumn(8).setPreferredWidth(20);
            jTableFuncionario.getColumnModel().getColumn(8).setResizable(false);
            jTableFuncionario.getTableHeader().setReorderingAllowed(false);
            connection.close();
        }

    }

    private String validacao() {
        String cpf = jTextFieldCPF.getText();
        cpf = cpf.replace(".", "");
        cpf = cpf.replace("-", "");
        String validar = "";

        int cont = 0;
        if (jTextFieldNome.getText().isEmpty()) {
            validar += "Nome ";
            validacaoNome.setVisible(true);
            cont++;
        }
        if (jTextFieldCarteiradeTRABALHO.getText().isEmpty()) {
            validar += "\n" + "Numero da carteira de trabalho ";
            validacaoCarteiraTrabalho.setVisible(true);
            cont++;
        }
        if (jTextFieldEndereco.getText().isEmpty()) {
            validar += "\n" + "Endereço ";
            validacaoEndereco.setVisible(true);
            cont++;
        }
        if (jTextFieldRG.getText().isEmpty()) {
            validar += "\n" + "RG";
            validacaoRG.setVisible(true);
            cont++;
        }
        if (ValidaCPF.isCPF(cpf) == false) {
            validar += "\n" + "CPF ";
            validacaoCPF.setVisible(true);
            cont++;
        }
        if (!logica.LogicasPedido.validaData(jTextFieldDataAdmissao.getText())) {

            // se cair aqui, a data é inválida
            validar += "\n" + "Data de admissão ";
            validacaoDataAdmissao.setVisible(true);
            cont++;
        }

        if (!logica.LogicasPedido.validaData(jTextFieldDataNascimento.getText())) {

            validar += "\n" + "Data Nascimento ";
            validacaoDataNascimento.setVisible(true);
            cont++;
        }
        if (jTextFieldTelefone.getText().isEmpty()) {
            validar += "\n" + "Telefone ";
            validacaoTelefone.setVisible(true);
            cont++;
        }
        if (cont != 0) {
            validar = "Campos obrigatorios: \n" + validar;
        }
        return validar;
    }

    public void desativaLableValidation() {
        validacaoRG.setVisible(false);
        validacaoCarteiraTrabalho.setVisible(false);
        validacaoCPF.setVisible(false);
        validacaoDataAdmissao.setVisible(false);
        validacaoDataNascimento.setVisible(false);
        validacaoEndereco.setVisible(false);
        validacaoNome.setVisible(false);
        validacaoRG.setVisible(false);
        validacaoTelefone.setVisible(false);
    }

    public String datas(String data) {
        if (data == null) {
            String ano = "0000";
            String mes = "00";
            String dia = "00";
            String dataSalvar = dia + mes + ano;
            return dataSalvar;

        } else {
            String data1 = String.valueOf(data);
            String data3[] = data1.split(Pattern.quote("-"));

            String ano = data3[0];
            String mes = data3[1];
            String dia = data3[2];
            String dataSalvar = dia + mes + ano;

            return dataSalvar;
        }

    }

}
