/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.vale;

import DAO.ConnectionFactory;
import DAO.Vale.ValeDAO;
import DAO.funcionario.FuncionarioDAO;
import Modelo.Funcionario.ModeloFuncionario;
import Modelo.Vale.ModeloVale;
import Visao.venda.Venda;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author SERVIDOR
 */
public class Vale extends javax.swing.JFrame {

    /**
     * Creates new form ListaPedido
     */
    public Vale() throws SQLException {
        initComponents();
        jTextFieldIDVale.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jLabelIDCliente = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldIDFuncionario = new javax.swing.JTextField();
        jTextFieldNomefuncionario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonPesquisar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jFormattedTextDataEmissao = new javax.swing.JFormattedTextField();
        jTextFieldvalor = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaObservacao = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldIDVale = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("E.B.O. Cadastro de vales");

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableClientes);

        jLabelIDCliente.setText("Funcionario");

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("ID Func");

        jTextFieldIDFuncionario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIDFuncionarioFocusLost(evt);
            }
        });

        jTextFieldNomefuncionario.setEnabled(false);

        jLabel1.setText("Nome");

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        try {
            jFormattedTextDataEmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jTextAreaObservacao.setColumns(20);
        jTextAreaObservacao.setRows(5);
        jScrollPane1.setViewportView(jTextAreaObservacao);

        jLabel2.setText("Observação");

        jLabel3.setText("Data");

        jLabel4.setText("Valor");

        jLabel5.setText("ID Vale");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelIDCliente)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jFormattedTextDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldIDFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldNomefuncionario))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextFieldvalor, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonNovo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPesquisar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSair))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldIDVale, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldIDVale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelIDCliente)
                    .addComponent(jButton1)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldIDFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldNomefuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldvalor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonPesquisar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonSair))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        try {
            Connection connection = ConnectionFactory.getConnection();
            String id = "" + jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 0);
            ValeDAO valeDAO = new ValeDAO(connection);
            ModeloVale modeloVale = new ModeloVale();

            modeloVale = valeDAO.busca(Long.parseLong(id));
            jTextFieldvalor.setText("" + modeloVale.getValor());
            jTextFieldIDVale.setText("" + modeloVale.getId());
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            jFormattedTextDataEmissao.setText(format.format(modeloVale.getDataEmissao()));
            jTextAreaObservacao.setText("" + modeloVale.getObservacao());

            // TODO add your handling code here:
            connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Vale.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jTableClientesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new PesquisaFuncionario(null, true, this).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed

        jFormattedTextDataEmissao.setText("");
        jTextAreaObservacao.setText("");
        jTextFieldvalor.setText("");
        jTextFieldIDFuncionario.setText("");
        jTextFieldNomefuncionario.setText("");
        jTextFieldIDVale.setText("");
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        try (Connection connection = ConnectionFactory.getConnection()) {
            ValeDAO valeDAO = new ValeDAO(connection);

            //ramoatividade
            if (jTextFieldIDVale.getText().isEmpty()) {
                if (validacao().isEmpty()) {
                    ModeloVale modeloVale = new ModeloVale();

                    modeloVale.setObservacao(jTextAreaObservacao.getText());
                    BigDecimal b = new BigDecimal(jTextFieldvalor.getText());
                    modeloVale.setValor(b);
                    modeloVale.setIdFuncionario(Long.parseLong(jTextFieldIDFuncionario.getText()));
                    String stringDataSalvar = jFormattedTextDataEmissao.getText();
                    SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

                    Date dataSalvar = new Date(format.parse(stringDataSalvar).getTime());
                    modeloVale.setDataEmissao(dataSalvar);
                    JOptionPane.showMessageDialog(null, "O numero do vale é: \n" + valeDAO.adiciona(modeloVale));
                            
                    
                    
                    Long id = Long.parseLong(jTextFieldIDFuncionario.getText());
                    try {
                        PreencherTabela(id);
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex);
                        Logger.getLogger(Vale.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    jFormattedTextDataEmissao.setText("");
                    jTextAreaObservacao.setText("");
                    jTextFieldvalor.setText("");
                    jTextFieldIDFuncionario.setText("");
                    jTextFieldNomefuncionario.setText("");
                    jTextFieldIDVale.setText("");
                } else {
                    String message = validacao();
                    JOptionPane.showMessageDialog(null, message, "Aviso", JOptionPane.INFORMATION_MESSAGE);

                }
            } else {
                JOptionPane.showMessageDialog(null, "Não pode ser alterado");
            }

            //JOptionPane.showMessageDialog(rootPane, "Dados Inseridos Com Sucesso");
            connection.close();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            JOptionPane.showMessageDialog(null, " Falha no Armazenamento de dados \n ERRO :" + ex);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Vale.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        if (!jTextFieldIDFuncionario.getText().isEmpty()) {
            try {
                ValeDAO valeDAO = new ValeDAO(ConnectionFactory.getConnection());

                jTableClientes.setModel(valeDAO.listaValePorFuncionario(Long.parseLong(jTextFieldIDFuncionario.getText())));
                jTableClientes.setRowSorter(new TableRowSorter(valeDAO.listaValePorFuncionario(Long.parseLong(jTextFieldIDFuncionario.getText()))));
                jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(5);
                jTableClientes.getColumnModel().getColumn(0).setResizable(false);
                jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(5);
                jTableClientes.getColumnModel().getColumn(1).setResizable(false);
                jTableClientes.getColumnModel().getColumn(2).setPreferredWidth(20);
                jTableClientes.getColumnModel().getColumn(2).setResizable(false);
                jTableClientes.getColumnModel().getColumn(3).setPreferredWidth(20);
                jTableClientes.getColumnModel().getColumn(3).setResizable(false);

                jTableClientes.getTableHeader().setReorderingAllowed(false);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
                Logger.getLogger(Vale.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Insira o Funcionario");
        }
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        try {
            if (logica.LogicasPedido.joptionSenha()) {
                try {
                    Connection connection = ConnectionFactory.getConnection();
                    ValeDAO valeDAO = new ValeDAO(connection);

                    ModeloVale modeloVale = new ModeloVale();
                    modeloVale.setId(Long.parseLong(jTextFieldIDVale.getText()));

                    valeDAO.remove(modeloVale);
                    

                    JOptionPane.showMessageDialog(rootPane, "Vale excluido com Sucesso");

                    connection.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);
                    JOptionPane.showConfirmDialog(rootPane, "Erro ao excluir os  Registro!!\n erro:" + ex);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Senha Invalida");

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Vale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTextFieldIDFuncionarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIDFuncionarioFocusLost
        if (!jTextFieldIDFuncionario.getText().isEmpty()) {
            try {

                Connection connection = ConnectionFactory.getConnection();
                FuncionarioDAO funcionarioDAO = new FuncionarioDAO(connection);
                if (funcionarioDAO.verificacao(Long.parseLong(jTextFieldIDFuncionario.getText()))) {

                    ModeloFuncionario modeloFuncionario = new ModeloFuncionario();
                    modeloFuncionario = funcionarioDAO.buscaPorId(Long.parseLong(jTextFieldIDFuncionario.getText()));
                    jTextFieldNomefuncionario.setText(modeloFuncionario.getNome());
                } else {
                    JOptionPane.showMessageDialog(null, "ID do Funcionario invalido");

                }
                connection.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
                Logger.getLogger(Venda.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTextFieldIDFuncionarioFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Vale().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Vale.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JFormattedTextField jFormattedTextDataEmissao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelIDCliente;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTextArea jTextAreaObservacao;
    private javax.swing.JTextField jTextFieldIDFuncionario;
    private javax.swing.JTextField jTextFieldIDVale;
    private javax.swing.JTextField jTextFieldNomefuncionario;
    private javax.swing.JTextField jTextFieldvalor;
    // End of variables declaration//GEN-END:variables
public void setRetornoConsultaFuncionario(String iDCliente, String nomeCliente) {
        this.jTextFieldIDFuncionario.setText(String.valueOf(iDCliente));
        this.jTextFieldNomefuncionario.setText(String.valueOf(nomeCliente));
        Long id = Long.parseLong(jTextFieldIDFuncionario.getText());
        try {
            PreencherTabela(id);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Vale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void PreencherTabela(Long id) throws SQLException {
        try (Connection connection = ConnectionFactory.getConnection()) {
            ValeDAO valeDAO = new ValeDAO(connection);

            jTableClientes.setModel(valeDAO.listaValePorFuncionario(Long.parseLong(jTextFieldIDFuncionario.getText())));

            jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(2);
            jTableClientes.getColumnModel().getColumn(0).setResizable(false);
            jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(20);
            jTableClientes.getColumnModel().getColumn(1).setResizable(false);

            jTableClientes.getTableHeader().setReorderingAllowed(false);
            connection.close();
        }
    }

    private String validacao() {

        String validar = "";

        int cont = 0;

        if (!logica.LogicasPedido.validaData(jFormattedTextDataEmissao.getText())) {
            validar += "\n" + "data invalida  ";

            cont++;

        }
        if (jTextFieldIDFuncionario.getText().isEmpty()) {
            validar += "\n" + "Insira o ID do Funcionario  ";

            cont++;

        }
        if (!logica.LogicasPedido.isfloat(jTextFieldvalor.getText())) {
            validar += "\n" + "Valor invalido ";

            cont++;
        }

        return validar;
    }

}
