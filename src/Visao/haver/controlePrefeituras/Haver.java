/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao.haver.controlePrefeituras;

import DAO.ConnectionFactory;
import DAO.cliente.ClienteDAO;
import DAO.haver.HaverDAO;
import Modelo.Cliente.ModeloCliente;
import Modelo.haver.ModeloHaver;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.Date;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author SERVIDOR
 */
public class Haver extends javax.swing.JFrame {

    /**
     * Creates new form ListaPedido
     */
    public Haver() throws SQLException {
        initComponents();
        jTextFieldIDHaver.setEnabled(false);
        jTextFieldvalorRetirado.setEnabled(false);
        jFormattedTextDataQuitada.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jLabelIDCliente = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldIDCliente = new javax.swing.JTextField();
        jTextFieldNomecliente = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonPesquisar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jFormattedTextDataEmissao = new javax.swing.JFormattedTextField();
        jTextFieldvalorHaver = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaObservacao = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldIDHaver = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jFormattedTextDataQuitada = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldvalorRetirado = new javax.swing.JTextField();
        valorTotal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("E.B.O. Cadastro de Haveres");

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTableClientesMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(jTableClientes);

        jLabelIDCliente.setText("Cliente");

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("ID Cliente");

        jTextFieldIDCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldIDClienteFocusLost(evt);
            }
        });

        jLabel1.setText("Nome");

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        try {
            jFormattedTextDataEmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jTextAreaObservacao.setColumns(20);
        jTextAreaObservacao.setRows(5);
        jScrollPane1.setViewportView(jTextAreaObservacao);

        jLabel2.setText("Observação");

        jLabel3.setText("Data Emissao");

        jLabel4.setText("Valor haver");

        jLabel5.setText("ID Haver");

        jLabel7.setText("Data quitada");

        try {
            jFormattedTextDataQuitada.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel8.setText("Valor retirado");

        valorTotal.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelIDCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldIDCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldNomecliente))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextFieldIDHaver, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonNovo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonPesquisar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSair)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jFormattedTextDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jTextFieldvalorHaver, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jFormattedTextDataQuitada, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(valorTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jTextFieldvalorRetirado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextFieldIDHaver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelIDCliente)
                    .addComponent(jButton1)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldIDCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNomecliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jFormattedTextDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldvalorHaver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextDataQuitada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldvalorRetirado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(valorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonPesquisar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonSair))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        try {
            Connection connection = ConnectionFactory.getConnection();
            String id = "" + jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 0);
            HaverDAO haverDAO = new HaverDAO(connection);
            ModeloHaver modeloHaver = new ModeloHaver();

            modeloHaver = haverDAO.busca(Long.parseLong(id));

            jTextFieldvalorHaver.setText("" + modeloHaver.getValorHaver());

            jTextFieldIDHaver.setText("" + modeloHaver.getId());
            SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
            jFormattedTextDataEmissao.setText(format.format(modeloHaver.getDataEmissao()));
            jTextFieldvalorRetirado.setText("" + modeloHaver.getValorRetirado());
            jTextAreaObservacao.setText("" + modeloHaver.getObservacao());
            if (modeloHaver.getDataQuitado() != null) {
                jTextFieldvalorRetirado.setText("" + modeloHaver.getValorRetirado());
                jFormattedTextDataQuitada.setText(format.format(modeloHaver.getDataQuitado()));

            }

            // TODO add your handling code here:
            connection.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Haver.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextFieldvalorRetirado.setEnabled(true);
        jFormattedTextDataQuitada.setEnabled(true);

        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableClientesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new PesquisaCliente(null, true, this).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed

        jFormattedTextDataEmissao.setText("");
        jTextAreaObservacao.setText("");
        jTextFieldvalorHaver.setText("");
        jTextFieldIDCliente.setText("");
        jTextFieldNomecliente.setText("");
        jTextFieldvalorRetirado.setText("");
        jFormattedTextDataQuitada.setText("");
        jTextFieldvalorRetirado.setEnabled(false);
        jFormattedTextDataQuitada.setEnabled(false);
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if (validacao().isEmpty()) {
            try (Connection connection = ConnectionFactory.getConnection()) {
                HaverDAO haverDAO = new HaverDAO(connection);

                //ramoatividade
                if (validacao().isEmpty()) {
                    ModeloHaver modeloHaver = new ModeloHaver();
                    modeloHaver.setObservacao(jTextAreaObservacao.getText());

                    BigDecimal b = new BigDecimal(jTextFieldvalorHaver.getText());
                    modeloHaver.setValorHaver(b);

                    modeloHaver.setIdCliente(Long.parseLong(jTextFieldIDCliente.getText()));
                    String stringDataSalvar = jFormattedTextDataEmissao.getText();

                    SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                    Date dataEmissao = new Date(format.parse(stringDataSalvar).getTime());

                    modeloHaver.setDataEmissao(dataEmissao);

                    String idSalvar = jTextFieldIDHaver.getText();
                    if (idSalvar.equals("")) {
                        haverDAO.adiciona(modeloHaver);

                    } else {
                        BigDecimal c = new BigDecimal(jTextFieldvalorRetirado.getText());
                        modeloHaver.setValorRetirado(c);

                        try {

                            Date dataquitado = new Date(format.parse(jFormattedTextDataQuitada.getText()).getTime());
                            modeloHaver.setDataQuitado(dataquitado);
                        } catch (Exception ex) {
                            modeloHaver.setDataQuitado(null);
                        }

                        modeloHaver.setId(Long.parseLong(idSalvar));

                        haverDAO.altera(modeloHaver);

                    }

                    jFormattedTextDataEmissao.setText("");
                    jTextAreaObservacao.setText("");
                    jTextFieldvalorHaver.setText("");
                    //jTextFieldIDCliente.setText("");
                    //jTextFieldNomecliente.setText("");
                    jTextFieldvalorRetirado.setText("");
                    jFormattedTextDataQuitada.setText("");
                } else {
                    String message = validacao();
                    JOptionPane.showMessageDialog(null, message, "Aviso", JOptionPane.INFORMATION_MESSAGE);

                }

                //JOptionPane.showMessageDialog(rootPane, "Dados Inseridos Com Sucesso");
                connection.close();

            } catch (SQLException ex) {

                JOptionPane.showMessageDialog(null, " Falha no Armazenamento de dados \n ERRO :" + ex);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
                Logger.getLogger(Haver.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextFieldvalorRetirado.setEnabled(false);
            jFormattedTextDataQuitada.setEnabled(false);
            try {
                LimparCampos();
                PreencherTabela();
            } catch (SQLException ex) {
                Logger.getLogger(Haver.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            String message = validacao();
            JOptionPane.showMessageDialog(null, message, "Aviso", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        if (!jTextFieldIDCliente.getText().isEmpty()) {

            try {
                HaverDAO haverDAO = new HaverDAO(ConnectionFactory.getConnection());

                jTableClientes.setModel(haverDAO.listaValePorCliente(Long.parseLong(jTextFieldIDCliente.getText().toUpperCase())));
                jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(50);
                jTableClientes.getColumnModel().getColumn(0).setResizable(false);
                jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(50);
                jTableClientes.getColumnModel().getColumn(1).setResizable(false);
                jTableClientes.getColumnModel().getColumn(2).setPreferredWidth(200);
                jTableClientes.getColumnModel().getColumn(2).setResizable(false);
                jTableClientes.getColumnModel().getColumn(3).setPreferredWidth(200);
                jTableClientes.getColumnModel().getColumn(3).setResizable(false);
                jTableClientes.getColumnModel().getColumn(4).setPreferredWidth(200);
                jTableClientes.getColumnModel().getColumn(4).setResizable(false);

                jTableClientes.getTableHeader().setReorderingAllowed(false);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
                Logger.getLogger(Haver.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Insira o cliente");
        }
        jTextFieldvalorRetirado.setEnabled(false);
        jFormattedTextDataQuitada.setEnabled(false);

    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        try {
            if (logica.LogicasPedido.joptionSenha()) {
                try {
                    Connection connection = ConnectionFactory.getConnection();
                    HaverDAO haverDAO = new HaverDAO(connection);

                    ModeloHaver modeloHaver = new ModeloHaver();
                    modeloHaver.setId(Long.parseLong(jTextFieldIDHaver.getText()));

                    haverDAO.remove(modeloHaver);

                    JOptionPane.showMessageDialog(rootPane, "Haver excluido com Sucesso");

                    connection.close();
                } catch (SQLException ex) {
                    JOptionPane.showConfirmDialog(rootPane, "Erro ao excluir os  Registro!!\n erro:" + ex);
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Haver.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextFieldvalorRetirado.setEnabled(false);
        jFormattedTextDataQuitada.setEnabled(false);
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTextFieldIDClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIDClienteFocusLost
        try {
            LimparCampos();
            PreencherTabela();
        } catch (SQLException ex) {
            Logger.getLogger(Haver.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextFieldIDClienteFocusLost

    private void jTableClientesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableClientesMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Haver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Haver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Haver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Haver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Haver().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Haver.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JFormattedTextField jFormattedTextDataEmissao;
    private javax.swing.JFormattedTextField jFormattedTextDataQuitada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelIDCliente;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTextArea jTextAreaObservacao;
    private javax.swing.JTextField jTextFieldIDCliente;
    private javax.swing.JTextField jTextFieldIDHaver;
    private javax.swing.JTextField jTextFieldNomecliente;
    private javax.swing.JTextField jTextFieldvalorHaver;
    private javax.swing.JTextField jTextFieldvalorRetirado;
    private javax.swing.JTextField valorTotal;
    // End of variables declaration//GEN-END:variables
public void setRetornoConsultaCliente(String iDCliente, String nomeCliente) {
        this.jTextFieldIDCliente.setText(String.valueOf(iDCliente));

        this.jTextFieldNomecliente.setText(String.valueOf(nomeCliente));
        Long id = Long.parseLong(jTextFieldIDCliente.getText());
        try {
            PreencherTabela();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
            Logger.getLogger(Haver.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void PreencherTabela() throws SQLException {
        try (Connection connection = ConnectionFactory.getConnection()) {
            HaverDAO haverDAO = new HaverDAO(connection);
            ClienteDAO clienteDAO = new ClienteDAO(connection);
            ModeloCliente modeloCliente = new ModeloCliente();
            System.err.println(jTextFieldIDCliente.getText());

            modeloCliente = clienteDAO.buscaPorId(Long.parseLong(jTextFieldIDCliente.getText()));
            jTextFieldNomecliente.setText(modeloCliente.getNome());

            jTableClientes.setModel(haverDAO.listaValePorCliente(Long.parseLong(jTextFieldIDCliente.getText())));

            jTableClientes.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTableClientes.getColumnModel().getColumn(0).setResizable(false);
            jTableClientes.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTableClientes.getColumnModel().getColumn(1).setResizable(false);

            jTableClientes.getTableHeader().setReorderingAllowed(false);
            
            
            valorTotal.setText(""+haverDAO.totalHaver(modeloCliente.getId()));
            connection.close();
        }
    }

    private String validacao() {

        String validar = "";

        int cont = 0;

        if (!logica.LogicasPedido.validaData(jFormattedTextDataEmissao.getText())) {
            validar += "\n" + "data invalida  ";

            cont++;

        }
        if (!logica.LogicasPedido.isfloat(jTextFieldvalorHaver.getText())) {
            validar += "Valor invalido ";

            cont++;
        }
        if (!jTextFieldIDHaver.getText().isEmpty()) {

            if (!logica.LogicasPedido.isfloat(jTextFieldvalorRetirado.getText())) {
                validar += "Valor Retirado invalido ";

                cont++;
            }

        }

        if (cont != 0) {
            validar = "Campos obrigatorios: \n" + validar;
        }

        return validar;
    }

    private void LimparCampos() {
        //jTextFieldIDCliente.setText("");
        jTextFieldIDHaver.setText("");
        jTextFieldNomecliente.setText("");
        jTextFieldvalorHaver.setText("");
        jTextFieldvalorRetirado.setText("");
    }

}
